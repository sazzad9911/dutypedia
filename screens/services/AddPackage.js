import React from "react";
import {
  View,
  ScrollView,
  Text,
  Dimensions,
  KeyboardAvoidingView,
  Platform,
  Pressable,
  TouchableOpacity,
  ActivityIndicator,
  Alert,
} from "react-native";
import { SvgXml } from "react-native-svg";
import Input from "../../components/Input";
import TextArea from "../../components/TextArea";
import { AntDesign } from "@expo/vector-icons";
import { createMaterialTopTabNavigator } from "@react-navigation/material-top-tabs";
const { width, height } = Dimensions.get("window");
const Tab = createMaterialTopTabNavigator();
import Animated from "react-native-reanimated";
import IconButton from "../../components/IconButton";
import { CheckBox } from "../Seller/Pricing";
import uuid from "react-native-uuid";
import { ImageButton } from "../Seller/Service";
import { uploadFile } from "../../Class/upload";
import { fileFromURL } from "../../action";
import { useDispatch, useSelector } from "react-redux";
import { Entypo } from "@expo/vector-icons";
import { createOtherService, createService } from "../../Class/service";
import { Menu } from "react-native-paper";
import { useIsFocused } from "@react-navigation/native";
import { localOptionsToServer } from "../../Class/dataConverter";
import { SafeAreaView } from "react-native-safe-area-context";

export default function AddPackage({ navigation, route }) {
  const [Package, setPackage] = React.useState([]);
  const [Title, setTitle] = React.useState();
  const [Description, setDescription] = React.useState();
  const [Images1, setImage1] = React.useState();
  const [Image2, setImage2] = React.useState();
  const [Image3, setImage3] = React.useState();
  const [Image4, setImage4] = React.useState();
  const [ImageError, setImageError] = React.useState();
  const [TitleError, setTitleError] = React.useState();
  const [DescriptionError, setDescriptionError] = React.useState();
  const user = useSelector((state) => state.user);
  const vendor = useSelector((state) => state.vendor);
  const businessForm = useSelector((state) => state.businessForm);
  const listData = useSelector((state) => state.listData);
  const [Loader, setLoader] = React.useState(false);
  const packages = useSelector((state) => state.packages);
  const [PackageError, setPackageError] = React.useState();
  const isFocused = useIsFocused();
  const dispatch = useDispatch();
  const [Height, setHeight] = React.useState(4);
  const length =
    route.params && route.params.length ? route.params.length : null;
  const params = route.params;
  const [serverData, setServerData] = React.useState();

  const deleteData = async (id) => {
    setLoader(true);
    await dispatch({ type: "DELETE_PACKAGE", playload: id });
    setLoader(false);
  };
  React.useEffect(() => {
    if (params && params.data) {
      setServerData(params.data);
    }
  }, []);
  React.useEffect(() => {
    //setLoader(true)
    let max = 0;
    packages &&
      packages.map((doc, i) => {
        if (max < doc.features.length) {
          max = doc.features.length;
        }
      });
    if (max < 4) {
      setHeight(4);
      return;
    }
    setHeight(max);
    //setLoader(false)
  }, [packages.length + length]);

  if (Loader || !isFocused) {
    return (
      <View style={{ flex: 1, justifyContent: "center", alignItems: "center" }}>
        <ActivityIndicator color={"red"} size="small" />
      </View>
    );
  }

  return (
    <KeyboardAvoidingView
      style={{ flex: 1 }}
      behavior={Platform.OS === "ios" ? "padding" : null}
      keyboardVerticalOffset={Platform.OS === "ios" ? 100 : 0}>
      <SafeAreaView style={{ flex: 1 }}>
        <View
          style={{
            paddingHorizontal: 20,
            paddingVertical: 5,
          }}>
          <AntDesign
            onPress={() => {
              navigation.goBack();
            }}
            name="left"
            size={24}
            color="black"
          />
        </View>
        <ScrollView showsVerticalScrollIndicator={false}>
          <View
            style={{
              flexDirection: "row",
              paddingHorizontal: 20,
              marginTop: 15,
            }}>
            <View
              style={{
                flex: 1,
              }}>
              <SvgXml xml={circle} height="13" width={"13"} />
              <Text
                style={{
                  fontSize: 20,
                  fontFamily: "Poppins-SemiBold",
                  marginTop: 10,
                  lineHeight: 28,
                }}>
                Add Your Best Package Service
              </Text>
            </View>
            <SvgXml
              xml={vectorImage}
              style={{
                flex: 2,
              }}
              height={width / 2 + 35}
              width={width / 2 + 35}
            />
          </View>
          <View
            style={{
              paddingHorizontal: 20,
            }}>
            <Input
              error={TitleError}
              value={Title}
              onChange={(e) => setTitle(e)}
              style={{
                borderWidth: 1,
                marginHorizontal: 0,
              }}
              placeholder={"Service Title"}
            />
          </View>
          <View
            style={{
              marginHorizontal: 20,
              marginBottom: 10,
            }}>
            <TextArea
              error={DescriptionError}
              value={Description}
              onChange={(e) => setDescription(e)}
              style={{
                marginTop: 15,
              }}
              placeholder={"Description"}
            />
          </View>
          <View
            style={{
              flexDirection: "row",
              paddingHorizontal: 20,
              marginBottom: 15,
              marginTop: 10,
            }}>
            <Text
              style={{
                fontSize: 18,
                fontFamily: "Poppins-SemiBold",
              }}>
              Add Package
            </Text>
            <View
              style={{
                flex: 1,
                marginLeft: 50,
                justifyContent: "center",
              }}>
              <Text
                style={{
                  fontSize: 12,
                  textAlign: "justify",
                }}>
                *minimum Two package and maximum 5 package can add
              </Text>
            </View>
          </View>

          {Height ? (
            <View
              style={{
                height: Height * 60,
              }}>
              <Tab.Navigator
                initialRouteName={
                  packages.length == 0
                    ? "Add Package"
                    : packages[packages.length - 1].id
                }
                tabBar={(props) => (
                  <TabBar
                    onClick={(e) => {
                      //console.log(e)
                      navigation.navigate("AddPackageScreen", {
                        setPackage: setPackage,
                        data: packages.filter((d) => e.id == d.id)[0],
                        package: packages,
                      });
                    }}
                    onPress={(e) => {
                      Alert.alert("Hey!", "Are you want to delete this?", [
                        {
                          text: "Cancel",
                          onPress: () => console.log("Cancel Pressed"),
                          style: "cancel",
                        },
                        {
                          text: "OK",
                          onPress: () => {
                            deleteData(e);
                          },
                        },
                      ]);
                    }}
                    {...props}
                  />
                )}
                screenOptions={{
                  lazy: true,
                  lazyPreloadDistance: 100,
                }}>
                {packages.map((doc, i) => (
                  <Tab.Screen
                    initialParams={{ data: doc }}
                    key={i}
                    name={doc.id}
                    component={TabScreen}
                  />
                ))}

                {packages.length < 5 && (
                  <Tab.Screen
                    name="Add Package"
                    initialParams={{ setPackage: setPackage }}
                    component={Screen}
                  />
                )}
              </Tab.Navigator>
            </View>
          ) : (
            <></>
          )}

          {PackageError && (
            <Text
              style={{
                marginHorizontal: 20,
                color: "red",
                marginVertical: 10,
              }}>
              {PackageError}
            </Text>
          )}
          <View
            style={{
              paddingHorizontal: 20,
              flexDirection: "row",
              alignItems: "center",
              justifyContent: "space-between",
            }}>
            <Text
              style={{
                fontSize: 16,
                fontFamily: "Poppins-Medium",
              }}>
              Add Photo
            </Text>
            <Text
              style={{
                fontSize: 10,
                fontFamily: "Poppins-Medium",
              }}>
              *maximum 2 mb size
            </Text>
          </View>
          <View
            style={{
              flexDirection: "row",
              paddingHorizontal: 20,
              justifyContent: "space-between",
              marginTop: 20,
            }}>
            <ImageButton
              value={Images1}
              onChange={(e) => {
                setImage1(e);
              }}
            />
            <ImageButton
              value={Image2}
              onChange={(e) => {
                setImage2(e);
              }}
            />
            <ImageButton
              value={Image3}
              onChange={(e) => {
                setImage3(e);
              }}
            />
            <ImageButton
              value={Image4}
              onChange={(e) => {
                setImage4(e);
              }}
            />
          </View>
          {ImageError && (
            <Text
              style={{
                color: "red",
                marginHorizontal: 20,
              }}>
              {ImageError}
            </Text>
          )}
          <View
            style={{
              height: 20,
            }}
          />
          <IconButton
            onPress={async () => {
              //navigation.goBack()
              setTitleError("");
              setDescriptionError("");
              setImageError("");
              setPackageError("");
              if (!Title) {
                setTitleError("*Title is required");
                return;
              }
              if (!Description) {
                setDescriptionError("*Description is  required");
                return;
              }
              if (packages.length < 2) {
                setPackageError("You must select minimum 2 package");
                return;
              }
              if (!Images1 || !Image2 || !Image3 || !Image4) {
                setImageError("*Image is required");
                return;
              }
              //console.log(serverData)
              if (!vendor || !serverData) {
                Alert.alert("Opps!", "Something went wrong");
                return;
              }

              //ongoing function-------------
              setLoader(true);
              let blobImages = [];
              blobImages.push(fileFromURL(Images1));
              blobImages.push(fileFromURL(Image2));
              blobImages.push(fileFromURL(Image3));
              blobImages.push(fileFromURL(Image4));
              const result = await uploadFile(blobImages, user.token);

              if (result) {
                createOtherService(
                  user.token,
                  {
                    serviceTitle: Title,
                    price: 0,
                    description: Description,
                    packageData: packages,
                  },
                  serverData,
                  result,
                  vendor.service.id,
                  "PACKAGE"
                )
                  .then((res) => {
                    navigation.navigate("VendorProfile", { direct: res });
                    setLoader(false);
                  })
                  .catch((err) => {
                    console.warn(err);
                    Alert.alert("Opps!", err.response.data.msg);
                    setLoader(false);
                  });
                return;
              }
              Alert.alert("Error!", "Can't upload photos");
              return;
            }}
            style={{
              backgroundColor: "#4ADE80",
              marginHorizontal: 20,
              height: 35,
              borderWidth: 0,
            }}
            title={"Confirm"}
          />
          <View
            style={{
              height: 20,
            }}
          />
        </ScrollView>
      </SafeAreaView>
    </KeyboardAvoidingView>
  );
}
const Screen = ({ navigation, route }) => {
  const setPackage =
    route.params && route.params.setPackage ? route.params.setPackage : null;
  return (
    <View
      style={{
        flex: 1,
        justifyContent: "center",
        alignItems: "center",
      }}>
      {route.name == "Add Package" && (
        <IconButton
          onPress={() => {
            navigation.navigate("AddPackageScreen", {
              setPackage: setPackage,
            });
          }}
          Icon={() => <SvgXml xml={rightIcon} height="15" width="15" />}
          style={{
            borderColor: "#E2E2E2",
            borderWidth: 0.5,
            width: 120,
            alignSelf: "center",
            justifySelf: "center",
          }}
          title={"Add Now"}
        />
      )}
    </View>
  );
};
const TabScreen = ({ navigation, route }) => {
  const data = route.params.data;

  return (
    <View
      style={{
        flex: 1,
      }}>
      {data.features.map((doc, i) => (
        <View
          style={{
            flexDirection: "row",
            marginHorizontal: 20,
            justifyContent: "space-between",
            marginVertical: 5,
            borderBottomColor: "#F1F1F1",
            borderBottomWidth: data.features.length - 1 == i ? 0 : 1,
          }}
          key={i}>
          <View style={{ flex: 1 }}>
            {doc.isAvailable ? (
              <SvgXml xml={right} height="30" width={"30"} />
            ) : (
              <Entypo
                style={{
                  marginBottom: 8,
                }}
                name="cross"
                size={20}
                color="red"
              />
            )}
          </View>
          <View
            style={{
              flex: 1,
              alignItems: "flex-end",
            }}>
            <Text
              style={{
                fontSize: 14,
                color: "#666666",
                textAlign: "justify",
              }}>
              {doc.title ? doc.title : ""}
            </Text>
          </View>
        </View>
      ))}
    </View>
  );
};
const right = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="30.605" height="27.993" viewBox="0 0 30.605 27.993">
<defs>
  <filter id="Path_20808" x="0" y="0" width="30.605" height="27.993" filterUnits="userSpaceOnUse">
    <feOffset dy="3" input="SourceAlpha"/>
    <feGaussianBlur stdDeviation="3" result="blur"/>
    <feFlood flood-opacity="0.059"/>
    <feComposite operator="in" in2="blur"/>
    <feComposite in="SourceGraphic"/>
  </filter>
</defs>
<g transform="matrix(1, 0, 0, 1, 0, 0)" filter="url(#Path_20808)">
  <path id="Path_20808-2" data-name="Path 20808" d="M-1914.146,1248.438a2.381,2.381,0,0,1,1.1-.082,3.952,3.952,0,0,1,3.039,1.914l.306.491a13.771,13.771,0,0,1,8.1-6.767l.053.046c-.041.048-.078.1-.122.144-.976.977-1.964,1.943-2.926,2.931a22.819,22.819,0,0,0-2.99,3.7c-.429.681-.823,1.382-1.237,2.071-.17.283-.351.559-.53.837a1.017,1.017,0,0,1-.122.149c-.156.163-.245.161-.361-.031q-.482-.794-.945-1.6a13.755,13.755,0,0,0-1.538-2.3,7.365,7.365,0,0,0-1.763-1.467Z" transform="translate(1923.15 -1237.99)" fill="#0d9e21"/>
</g>
</svg>
`;

const vectorImage = `<svg xmlns="http://www.w3.org/2000/svg" width="282.58" height="188.187" viewBox="0 0 282.58 188.187">
<g id="Group_10219" data-name="Group 10219" transform="translate(-121.823 -42.025)">
  <g id="Group_10209" data-name="Group 10209" transform="translate(121.823 42.024)">
    <g id="Untitled-1" transform="translate(0 0)">
      <path id="Path_20605" data-name="Path 20605" d="M657.245,384.166c3.91-1.162,7.759-2.566,11.729-3.4,5-1.042,10.1-1.6,15.155-2.37a13.853,13.853,0,0,0,1.751.211c12,.015,24,0,36,.015.906,0,1.8.091,2.7.136-.951,1.842-2.43,3.608-2.747,5.555a106.8,106.8,0,0,0-.86,11.85c-.091,1.917-.015,3.834-.015,5.917-.589.045-1.177.121-1.766.121-3.14.045-6.28.03-9.4.136a2.209,2.209,0,0,0-1.676.891,44.76,44.76,0,0,0-1.585,4.393,7.817,7.817,0,0,0-.453.951q-5.366,16.71-10.732,33.436c-.709,2.2-1.359,4.438-2.023,6.657-.755-.06-1.359-.121-1.947-.166l.015.045c-.121-.106-.226-.226-.347-.332-3.245-1-6.506-1.977-9.751-2.974.166-1.359.241-2.732.483-4.091q3.011-16.371,6.053-32.756c.619-2.838,1.223-5.676,1.917-8.861-3.321.242-6.295.453-9.268.664-.227,0-.453,0-.694-.015l-1.827.181c-2.234.166-4.468.332-6.959.5v4.589c-.151,1.781-.408,3.547-.423,5.329-.076,5.751-.06,11.5-.076,17.239q-.249,9.374-.483,18.748c-3.744-.257-7.487-.5-11.216-.755-.815-.121-1.63-.242-2.687-.408-.679-9.223-1.359-18.371-2.038-27.5,0-.891.045-1.781.015-2.672-.257-7.306-.694-14.612-.74-21.918C653.335,390.023,654.06,386.506,657.245,384.166Z" transform="translate(-496.754 -269.538)" fill="#140431"/>
      <path id="Path_20606" data-name="Path 20606" d="M593.838,388.876c-4.076-1.917-6.763-5.434-9.646-8.665a37.173,37.173,0,0,1-5.162-7.11,112.91,112.91,0,0,1-4.649-10.521,26.465,26.465,0,0,1-.966-3.8c3.26-.06,6.506-.106,9.766-.166,0-.226-.015-.468-.015-.694H573.052c-.423-3.578-1.177-7.155-1.192-10.733a55.31,55.31,0,0,1,4.06-20.333c2.1-5.374,5.51-9.812,9.012-14.235a58.665,58.665,0,0,1,4.181-4.272c.876-.906,1.54-.83,2.34.151q6.34,7.721,12.755,15.382c.845,1.011,1.736,1.977,2.627,2.959,1.54,1.706-.045,2.732-.981,3.608a21.127,21.127,0,0,0-6.6,13.3,23.354,23.354,0,0,0,1.706,12.348c-.393,2.7-.77,5.419-1.208,8.121-.6,3.774-1.238,7.548-1.857,11.336-1.132,3.985-2.249,7.97-3.4,11.955A6.373,6.373,0,0,1,593.838,388.876Z" transform="translate(-538.274 -305.555)" fill="#f33f3f"/>
      <path id="Path_20607" data-name="Path 20607" d="M592.467,339.86a.458.458,0,0,1,.015-.317,4.475,4.475,0,0,0,.709-1.026c.392-1.268.725-2.566,1.177-4.227.242,1.011.393,1.585.528,2.159.181-.015.347-.045.528-.06-.136-1.721-.272-3.442-.408-5.178l.091-.362a1.886,1.886,0,0,0,2.415-1.947c.076-1.947,1.3-2.777,2.823-3.5.362-.181.558-.709.845-1.087,2.174-.242,4.347-.5,6.521-.709,1.585-.151,3.185-.242,4.785-.362,1.027.966,2.038,1.932,3.079,2.9,3.487,3.261,7.2,2.506,8.846-1.8a111.338,111.338,0,0,1,10.627,3.351c2.7,1.132,4.061,3.789,4.453,6.642.649,4.815,1.027,9.661,1.525,14.476.091.891.241,1.766.362,2.642-3.532,2.113-7.336.649-11.065,1.132-.136-1.117-.226-1.947-.317-2.747-2.174.347-3.14,1.419-2.732,3.472-.241.6-.468,1.223-.755,1.8-.921,1.9-1.857,3.8-2.778,5.706-1.736,3.97-3.472,7.955-5.208,11.925l-18.688-3.125c.2-.725.408-1.434.574-2.159.574-2.355,1.177-4.695,1.676-7.064.347-1.645.543-3.336.8-5a20.279,20.279,0,0,0,.634-2.959c.015-.136-1.072-.362-1.63-.543l-.785-.045a4.593,4.593,0,0,0-1.434-.634c-1.917-.106-3.834-.106-5.736-.151-.181-.392-.362-.8-.694-1.555h5.57a5.717,5.717,0,0,0-7.064.649v-5.993a.379.379,0,0,1,.015-.287c.242-.392.664-.77.709-1.177C592.542,341.762,592.467,340.811,592.467,339.86Z" transform="translate(-528.147 -297.642)" fill="#12859a"/>
      <path id="Path_20608" data-name="Path 20608" d="M719.386,345.971c1.706.272,3.442.453,5.132.83,3.034.694,4.634,2.808,5.238,5.736a42.464,42.464,0,0,1,.106,14.491H718.631c-.377,4.695-.77,9.117-1.057,13.54-.181,2.838-.121,2.778-2.944,3.11-4.468.513-8.906,1.313-13.389,1.645a91.163,91.163,0,0,1-10.551-.136c-.589-.03-1.147-.755-1.721-1.147l.408-1.449-.694.136a4.874,4.874,0,0,1-.408-1.132,88.494,88.494,0,0,0-.528-8.966c-.634-3.955-1.117-7.774,1.208-11.352,3.125-.362,4.574-2.7,4.287-7.155-1.162-.06-2.34-.121-3.547-.2.694-3.744,3.623-5.132,6.627-6.325a23.136,23.136,0,0,1,3.864-.845c.468.317,1.253.543,1.359.951.664,2.34,1.887,3.351,4.317,3.472,3.411.166,6.038-1.449,8.257-3.759a3.9,3.9,0,0,1,3.638-1.4A8.448,8.448,0,0,0,719.386,345.971Z" transform="translate(-479.495 -286.062)" fill="#f33f3f"/>
      <path id="Path_20609" data-name="Path 20609" d="M600.417,381.585l-.227-.725c.121-.121.377-.272.362-.347-.619-1.993.589-1.977,1.993-1.962,4.876.03,9.751,0,14.627,0h2.264c-1.087,1.525-.709,2.415.528,3.019.211,1.117.408,2.249.619,3.366q4.619,24.7,9.253,49.391c.468,2.445,1.117,4.846,1.691,7.276v2.279c2.294.226,4.408.408,6.521.649,1,.106,1.977.317,2.959.483-.181,1.691-.362,3.381-.543,5.087a6.322,6.322,0,0,1-1.615-.393c-2.4-1.253-4.755-2.611-7.185-3.819a4.878,4.878,0,0,0-2.536-.453c-3.291.347-6.566.83-9.857,1.268-2.46-7.714-5.087-15.382-7.336-23.156-3.246-11.17-6.234-22.431-9.329-33.647-.543-2.053,1.041-4.529-1.3-6.249-.241-.181-.106-.815-.257-1.193A3.793,3.793,0,0,0,600.417,381.585Z" transform="translate(-523.839 -269.462)" fill="#110338"/>
      <path id="Path_20610" data-name="Path 20610" d="M585.7,446.383c-.121-2.31-.287-4.634-.347-6.944-.045-1.54.045-3.094.076-4.634a5.06,5.06,0,0,0,.241-1.026q-.023-11.729-.09-23.473a4.59,4.59,0,0,0-.317-1.162c.015-.77.045-1.555.06-2.325.347-.075.8-.045,1.011-.242,1.751-1.751,2.174-5.555.483-7.412a6.881,6.881,0,0,1-1.646-5.344c.106-3.774.091-7.563.121-11.351V378.41H605.43c-.347,3.155-.679,6.249-1,9.344l-3.895,37.179c-.74,7.065-1.479,14.129-2.264,21.193-.06.5-.634.951-.966,1.419-2.7-.166-5.4-.272-8.106-.5C588,446.911,586.849,446.61,585.7,446.383Z" transform="translate(-531.495 -269.533)" fill="#110338"/>
      <path id="Path_20611" data-name="Path 20611" d="M630.44,445.177c-.981-.166-1.962-.362-2.959-.483-2.113-.242-4.211-.423-6.521-.649v-2.279c1.585-8.393,3.23-16.786,4.755-25.179,2.294-12.544,4.5-25.1,6.747-37.662,2.627-.045,5.268-.06,7.895-.151a6.223,6.223,0,0,0,1.691-.574l7.563.181c.77.015,1.555,0,2.883,0-6.612,22.446-13.133,44.591-19.669,66.8Z" transform="translate(-513.257 -269.64)" fill="#f33f3f"/>
      <path id="Path_20612" data-name="Path 20612" d="M669.946,369.852c0,4.619-.015,9.238,0,13.857.015,1.389-.574,1.811-1.977,1.781-5.6-.076-11.2-.015-16.8-.015H639.59c-.5,0-1,0-1.51.015h-.664a4.231,4.231,0,0,1-.438-.015c-.121-.015-.241-.045-.362-.06a13.619,13.619,0,0,0-1.1-1.494c-1.811-1.842-3.668-3.653-5.495-5.48,1.449-6.068,2.928-12.121,4.347-18.19a1.907,1.907,0,0,1,2.1-1.676c9.238-.528,18.461-1.162,27.7-1.766.574.075,1.132.151,1.917.257-.483,1.857.966,4.181-1.857,5.027.091.709.151,1.343.226,1.977.513,1.9,1.026,3.8,1.57,5.691.015.045.211.03.332.045h0c.151,1.042.317,2.083.468,3.125.2-.03.377-.06.574-.106-.106-.664-.211-1.344-.317-2.008a5.862,5.862,0,0,1,1.4-1.087C668.9,369.58,669.448,369.807,669.946,369.852Z" transform="translate(-508.641 -280.538)" fill="#f33f3f"/>
      <path id="Path_20613" data-name="Path 20613" d="M662.464,384.146c-3.185,2.34-3.91,5.857-3.879,9.374.045,7.306.483,14.612.74,21.918.03.891-.015,1.781-.015,2.672a23.878,23.878,0,0,0-.755,2.838c-1,7.08-1.932,14.174-2.9,21.269l-10.114.226c-1.117.091-1.042-.664-1.026-1.4.121-4.393.423-8.8.287-13.178-.468-14.552-1.1-29.118-1.66-43.67-.076-1.857-.015-3.713-.015-5.751h19.322C662.464,380.372,662.464,382.259,662.464,384.146Z" transform="translate(-501.974 -269.518)" fill="#f33f3f"/>
      <path id="Path_20614" data-name="Path 20614" d="M598.807,353.98l18.688,3.125c.528,3.8,1.026,7.608,1.6,11.4.287,1.887.694,3.744,1.042,5.63.166,1.389.377,2.778.483,4.166a7.626,7.626,0,0,1-.242,1.721l-8.348.226v.045a3.8,3.8,0,0,1-.981.559c-1.645.377-2.46,1.328-2.2,2.672.242,1.328,1.434,1.947,3.034,1.676a3.735,3.735,0,0,1,1.253.2l.015.03c.075.151.166.287.241.438.151.257.3.5.649,1.1h-8.046c-1.117.015-2.249.015-3.366.03-.211-.015-.408-.03-.619-.06a.226.226,0,0,0-.227-.091l-.015-.106v.106c-.2.045-.408.091-.6.121-.2,0-.393.015-.6.015H596.5c-.121-.045-.226-.075-.347-.121l-.045-.03c-.347-.377-.679-.755-1.026-1.117a12.828,12.828,0,0,1-1.3-3.336,15.184,15.184,0,0,1,.453-4.181Q596.5,366.079,598.807,353.98Z" transform="translate(-527.121 -281.98)" fill="#110338"/>
      <path id="Path_20615" data-name="Path 20615" d="M690.347,341.439c-1.042-.8-2.1-1.615-3.185-2.445a25.777,25.777,0,0,1-.287,3.4c-1.419,6.868-6.717,11.276-13.887,11.623-3.411.166-6.838.03-10.431.03a2.786,2.786,0,0,1,.226-.785c1.615-1.932,1.646-1.947-.362-3.668a5.865,5.865,0,0,1-2.2-4.317c-.166-2.2-.724-4.362-.981-6.566-.151-1.268,0-2.581-.03-3.864a13.545,13.545,0,0,0-.2-1.54c.709-.785,1.389-1.494,2.023-2.249,3.834-4.559,8.755-6.642,14.582-5.464a13.722,13.722,0,0,1,10.914,9.9,7.066,7.066,0,0,0,2.853,4.166c.483.317.619,1.193.921,1.8C690.317,341.469,690.347,341.439,690.347,341.439Zm-19.518-1.977c.936.589,1.464,1.177,1.872,1.1.483-.091.876-.74,1.3-1.147-.453-.423-.845-1.072-1.359-1.193C672.263,338.163,671.735,338.812,670.829,339.462Zm6.506,1.811c.589-1,1.193-1.555,1.147-2.068-.03-.377-.876-.981-1.359-.981-.423.015-1.193.755-1.162,1.117C676.022,339.884,676.656,340.367,677.335,341.273Zm-8.966-.106c.589-.86,1.208-1.374,1.162-1.826a1.658,1.658,0,0,0-1.223-1.087c-.377-.015-1.072.725-1.087,1.162C667.191,339.854,667.8,340.352,668.369,341.167Z" transform="translate(-493.87 -296.61)" fill="#118499"/>
      <path id="Path_20616" data-name="Path 20616" d="M688.59,407.659a43.42,43.42,0,0,1,1.585-4.393,2.257,2.257,0,0,1,1.676-.891c3.125-.121,6.265-.106,9.4-.136.589-.015,1.162-.075,1.766-.121,0-2.083-.075-4,.015-5.917a106.755,106.755,0,0,1,.86-11.85c.317-1.947,1.8-3.713,2.747-5.555.166-.03.347-.045.513-.075,1.962,0,3.925.015,5.887-.015a9.024,9.024,0,0,0,1.66-.347,11.981,11.981,0,0,0,1.887.392c1.857.045,3.714-.03,5.57.045.423.015,1.117.347,1.208.664a29.7,29.7,0,0,1,.558,3.472c-1.162,6.34-2.295,12.695-3.487,19.035-.725,3.864-2.959,5.736-6.778,5.812q-5.819,0-11.638.015c-.453.03-.891.076-1.344.106-.211.076-.423.151-.634.242a13.934,13.934,0,0,0-2.053-.362C694.854,407.675,691.73,407.675,688.59,407.659Z" transform="translate(-478.799 -269.558)" fill="#118499"/>
      <path id="Path_20617" data-name="Path 20617" d="M645.587,332.393c-3.7-.679-7.5-1-10.808-3.049-.8-1.766-1.313-3.532-.121-5.374.106-.166-.272-.649-.423-.981-2.521-2.2-2.506-3.638.015-5.887.8-.71,1.555-1.464,2.415-2.279-1.555-1.132-1.042-2.144-.045-3.034a4.494,4.494,0,0,1,2.068-1.359c2.068-.226,3.261-1.525,4.649-2.838,2.2-2.083,3.789-1.645,4.755,1.057,1.192-.272,2.4-.619,3.623-.8a9.435,9.435,0,0,1,2.687-.06c2.31.347,2.808,1.162,2.219,3.427,1.283.634,2.611,1.177,3.834,1.9,2.023,1.208,2.4,2.4,1.947,4.71a3.258,3.258,0,0,0,.377,1.932c.528,1.072,1.359,1.993,1.842,3.079a3.949,3.949,0,0,1-1,4.725c-.347.362-.226,1.193-.332,1.8-.03.664-.06,1.313-.106,1.977a.392.392,0,0,1-.136.242c-.241.362-.5.725-.74,1.087H662.3c-.226.136-.453.257-.679.392l-.015.015c-3.215.045-6.43.075-9.631.121-.408-.015-.83-.045-1.238-.06-.045-.785-.091-1.585-.136-2.37l2.989-4.981a3.671,3.671,0,0,0-.03-3.97c-.03-.121-.045-.257-.075-.377-.438-1.117-.891-2.249-1.328-3.366a14.611,14.611,0,0,0-1.887-2.566c-1.464-1.3-2.642-.981-3.517.725-.543,1.057-1.117,2.083-1.6,2.959-.785-.151-1.359-.272-1.932-.377a13.938,13.938,0,0,0-.211,2.355c.015.317.559.589.8.921a4.184,4.184,0,0,1,.86,1.374c.468,2.038.906,4.076,1.193,6.144A11.076,11.076,0,0,1,645.587,332.393Z" transform="translate(-507.452 -306.282)" fill="#34266c"/>
      <path id="Path_20618" data-name="Path 20618" d="M686.583,365.915c1,2.989,1.977,5.978,2.974,8.966.2,1.268.408,2.536.664,4.181H670.945c0,.2.015.392.015.589h1.932c5.479,0,10.959.045,16.439-.03,1.54-.015,1.932.543,1.419,2.113-1.193-.936-2.038-.966-1.962.83-.226.015-.438.015-.664.03-6.612-.362-13.269.574-19.835-.755-1.132-.226-2.264-.468-3.4-.694l-.015-.03.589-1.177c-.453-1.132-.83-2.189-1.3-3.215-.679-1.449-1.419-2.868-2.128-4.3-.755-3.11-1.525-6.219-2.219-9.072,6.129-.332,12.619-.77,19.1-1a44.734,44.734,0,0,1,6.295.649h0C685.1,364.24,685.089,365.432,686.583,365.915Zm-10.838,4.423-.694-.091c-1.072-.332-2.143-.664-3.593-1.1a23.047,23.047,0,0,0,.06,4.181,2.961,2.961,0,0,0,1.479,1.9c.483.211,1.343-.408,2.038-.664l.136-.015.136.015c1.3.045,2.778.392,3.291-1.328.5-1.645-.679-2.551-1.827-3.336C676.621,369.779,676.107,370.187,675.745,370.338Z" transform="translate(-493.457 -277.718)" fill="#118499"/>
      <path id="Path_20619" data-name="Path 20619" d="M692.081,376.932c.574.408,1.132,1.132,1.721,1.147a91.2,91.2,0,0,0,10.551.136c4.483-.317,8.921-1.132,13.389-1.645,2.823-.332,2.762-.272,2.944-3.11.287-4.423.679-8.846,1.057-13.54h11.231q-.589,5.434-1.193,10.853c-.3,2.612-.528,5.238-1,7.819a20.552,20.552,0,0,1-1.464,3.728c-1.4-.03-2.717.151-3.578,1.449-.725,0-1.449,0-2.174.015H712.339c-1.509-.045-3.019-.075-4.529-.121-2.415-.257-4.846-1.238-7.261.015-.3.045-.619.075-.921.121-.347,0-.694-.015-1.057-.015H694.6c-.241,0-.483-.015-.724-.015-.513-.468-1.011-.936-1.525-1.4l-3.713-.091c.121-.377.227-.755.393-1.268a5.263,5.263,0,0,0-4.559,1.328,16.259,16.259,0,0,0-1.917.03c-1.072.121-1.494-.347-1.434-1.374.649-.891,1.313-1.781,1.962-2.672.408.076.981.377,1.177.211,1.872-1.555,3.97-.755,6.008-.755C690.888,377.793,691.492,377.234,692.081,376.932Z" transform="translate(-482.607 -278.954)" fill="#f5b596"/>
      <path id="Path_20620" data-name="Path 20620" d="M604.106,359.988c-1.525,8.061-3.064,16.137-4.559,24.212a15.306,15.306,0,0,0-.453,4.181,12.628,12.628,0,0,0,1.3,3.336c0,.377,0,.74-.015,1.117-.226.03-.453.06-.694.091-.468-.513-.936-1.011-1.419-1.525a1.488,1.488,0,0,0-.362-.045l-.03-.03c.121-1.344.241-2.7.408-4.483-1.268,1.208-2.1,1.993-2.928,2.777-.5.347-.981.709-1.479,1.057-.241,0-.528-.091-.709.015a12.528,12.528,0,0,1-7.155,1.464c-.272-.015-.559.438-.845.679-.483-.03-.981-.06-1.464-.075-.121-.211-.242-.438-.347-.649,1.057-1.072,2.1-2.144,3.155-3.23.2.091.483.3.574.242,3.336-2.385,6.446-4.921,6.521-9.555.015-1.509.136-3,.211-4.513q.385-7.744.785-15.488c1.072.136,1.464-.287,1.479-1.419.045-4.891-.393-9.8.649-14.642.211-.981.453-1.343,1.434-1.313,2.415.045,4.83.03,7.23.03l.785.045c.332,1.177.664,2.34,1,3.517-.257,1.66-.453,3.351-.8,5-.5,2.37-1.1,4.71-1.676,7.064C604.5,358.554,604.287,359.263,604.106,359.988Z" transform="translate(-532.419 -287.988)" fill="#f5b596"/>
      <path id="Path_20621" data-name="Path 20621" d="M636.587,385.427c1.842,1.827,3.683,3.638,5.495,5.48a13.619,13.619,0,0,1,1.1,1.494l-2.868-.045a.381.381,0,0,1-.091-.226c-1.494-1.132-2.944-2.34-4.483-3.4-.679-.468-1.781-1.117-2.294-.875-.664.317-.951,1.449-1.389,2.234a12.769,12.769,0,0,1-1.374,1.6,8.792,8.792,0,0,1-1.54.815c-.136-.121-.287-.242-.423-.362.317-.891.619-1.781.936-2.672,2.068-1.63,1.8-2.823-.891-3.97h0c.091-1.177-.091-2.189-1.464-2.521h0c-.362-1.525-.679-3.064-1.132-4.574a6.834,6.834,0,0,0-.966-1.615c-.513-.6-1.011-1.208-1.525-1.827a19.242,19.242,0,0,0-.2-3.5q-1.834-7.495-3.879-14.929c-.709-2.536-.634-5.359-2.445-7.548.2-.483.6-1,.574-1.464-.091-1.464-.332-2.9-.513-4.363l11.412-.091c.543,5.9,1.057,11.819,1.63,17.722.166,1.721.468,3.427.709,5.147.121,1.268.226,2.536.347,3.8.136,1.253.257,2.491.393,3.744-.015,1.193-.076,2.4,0,3.577.03.408.468.77.724,1.147h-.015c-.045,1.525-.242,3.11,1.494,3.97C634.791,383.283,634.9,385.019,636.587,385.427Z" transform="translate(-515.193 -287.539)" fill="#f5b596"/>
      <path id="Path_20622" data-name="Path 20622" d="M621.048,347.366c1.811,2.189,1.736,5,2.445,7.548q2.06,7.427,3.879,14.929a17.908,17.908,0,0,1,.2,3.5c-3.623,1.3-7.23,2.657-10.884,3.834a33.034,33.034,0,0,1-4.574.86c-.347-1.872-.755-3.744-1.042-5.63-.574-3.789-1.072-7.593-1.6-11.4,1.736-3.97,3.472-7.955,5.208-11.925,1.011-.528,2.34-.815,2.989-1.63C618.919,345.841,619.886,346.052,621.048,347.366Z" transform="translate(-519.111 -285.887)" fill="#f33f3f"/>
      <path id="Path_20623" data-name="Path 20623" d="M612.906,424.136c3.276-.438,6.566-.921,9.857-1.268a4.731,4.731,0,0,1,2.536.453c2.43,1.193,4.77,2.566,7.185,3.819a7.9,7.9,0,0,0,1.615.392c1.253.845,2.476,1.751,3.789,2.521,1.6.936,3.291,1.721,4.876,2.672.377.226.528.845.785,1.283-7.548.045-15.1.106-22.643.136a20.943,20.943,0,0,1-2.143-.2c-.151-.634-.317-1.268-.453-1.917a5.9,5.9,0,0,0-4.785-4.453c2.325,1.721,4.619,3.245,4.347,6.4-1.721.03-3.442.045-5.163.076C612.785,430.718,612.846,427.427,612.906,424.136Z" transform="translate(-517.46 -246.893)" fill="#f33f3f"/>
      <path id="Path_20624" data-name="Path 20624" d="M617.4,331.217c-1.645,4.3-5.359,5.057-8.846,1.8l-3.079-2.9c1.54-.091,3.487.347,4.513-.423.906-.694.709-2.747,1.087-4.181,1.026-3.759.543-7.532.166-11.321,1.162.513,2.325,1.042,3.638,1.615.045-.966.136-2.264.2-3.562.075-2.008.634-2.627,2.626-2.476a24.463,24.463,0,0,1,4.423.785c.5.121.876.709,1.3,1.087-.332,2.657-.664,5.313-1.011,7.97-.2,1.479-.377,2.974-.694,4.438-.574,2.581-1.977,3.291-4.513,2.4a8.089,8.089,0,0,0-1.208-.211c-1.057-1.268-2.113-2.536-3.381-4.076.181,2.642.649,4.725,2.974,5.857v2.566Q616.489,330.923,617.4,331.217Zm3.895-16.031c-.211-.015-.408-.03-.619-.06-.091,1.449-.181,2.883-.287,4.332.226.015.453.03.664.06C621.139,318.07,621.214,316.636,621.29,315.186Z" transform="translate(-521.149 -304.518)" fill="#f4b89b"/>
      <path id="Path_20625" data-name="Path 20625" d="M691.982,380.845c-.6.3-1.193.875-1.8.875-2.038,0-4.136-.8-6.008.755-.2.166-.785-.136-1.177-.211l-.06-.045c-.106-.106-.2-.211-.3-.317l-.06-.06c-.091-.106-.2-.2-.287-.3-1.494-1.827-.921-3.97-.589-5.887.755-4.438,1.932-8.8,2.747-13.223.317-1.751,0-3.608.211-5.389a16.516,16.516,0,0,1,1.464-4.8c.936,3.155,1.676,6.234,5.857,5.812-2.325,3.593-1.842,7.4-1.208,11.351.468,2.944.347,5.978.528,8.966a4.635,4.635,0,0,0,.408,1.132l.694-.136C692.253,379.879,692.117,380.362,691.982,380.845Z" transform="translate(-482.507 -282.867)" fill="#e68f7b"/>
      <path id="Path_20626" data-name="Path 20626" d="M701.749,350.6c-1.977-.287-3.955-.559-6.129-.875.725-3.562.574-6.868,3.215-9.223,3.17-.543,5.238.951,6.717,4.212.785-2.219,1.449-3.955,2.008-5.706a2.52,2.52,0,0,0-.136-1.359c-.332-1.057-.724-2.1-1.072-3.11-1.826-.3-3.925-.664-6.038-1.026-1.344-1.494-1.011-3.125-.3-4.725a1.73,1.73,0,0,1,1.223-.785c3.094-.317,5.978,0,8.212,2.566.468.543,1.479.6,2.385.951-.2.257-.377.483-.559.709,2.279,2.551,2.068,4.589-.876,7.7-.558.166-1.389.151-1.645.513a23.182,23.182,0,0,0-1.585,3.185c-.075,1.162-.136,2.34-.211,3.5-.528,1.072-1.057,2.128-1.6,3.2C704.164,350.435,702.956,350.511,701.749,350.6Z" transform="translate(-475.217 -295.266)" fill="#34266c"/>
      <path id="Path_20627" data-name="Path 20627" d="M593.511,354.215q-.385,7.744-.785,15.488c-.076,1.494-.181,3-.211,4.513-.06,4.634-3.185,7.17-6.521,9.555-.091.06-.377-.151-.574-.242.513-5.555,1.042-11.11,1.54-16.665a4.5,4.5,0,0,0-.06-.891,8.155,8.155,0,0,0,.679-1.359q1.721-5.978,3.4-11.955c.785.091,1.585.2,2.385.287A12.13,12.13,0,0,1,593.511,354.215Z" transform="translate(-531.364 -282.653)" fill="#110338"/>
      <path id="Path_20628" data-name="Path 20628" d="M649.994,322.941l-2.989,4.981c-1.162,0-2.325-.015-3.487-.015l-.362-.362c-.075-.03-.151-.075-.242-.106.03.075.076.166.106.242l.362.362,2.611,2.566c-.257,1.434-.211,3.034-.845,4.272a3.1,3.1,0,0,0,.136,3.593c-.6.121-1.223.226-1.827.347-1.223-1.389-.725-2.762,0-4.151.03-.045,0-.121,0-.181.468-.226,1.328-.408,1.359-.694a11.922,11.922,0,0,0-.257-2.566c-2.325.83-1,2.189-1.1,3.261-.468-.438-1.072,1.555-1.479-.076v-4.861a11.864,11.864,0,0,0,.287-2.793c-.272-2.068-.725-4.106-1.193-6.144a4.45,4.45,0,0,0-.86-1.374c-.242-.332-.785-.6-.8-.921a13.782,13.782,0,0,1,.211-2.355c.574.121,1.162.226,1.932.377.468-.876,1.057-1.9,1.6-2.959.876-1.706,2.053-2.038,3.517-.725a15.414,15.414,0,0,1,1.887,2.566,2.381,2.381,0,0,0,.106,2.838c.241.317.045.981.045,1.826.453-.5.815-.906,1.177-1.3.03.121.045.257.076.377C649.979,320.3,649.994,321.628,649.994,322.941Z" transform="translate(-503.859 -303.442)" fill="#f5b596"/>
      <path id="Path_20629" data-name="Path 20629" d="M646.575,420.916l10.114-.226c.045,1.977.075,3.955.121,5.932V428.1a.682.682,0,0,0-.015.3c-.393.392-.709.936-1.177,1.162-2.762,1.419-5.57,2.732-8.332,4.166-.528.272-.86.951-1.283,1.434-.06.075-.136.136-.2.211-1.57-.166-3.155-.332-4.725-.513a34.908,34.908,0,0,0,2.717-4.921C644.9,427,645.669,423.935,646.575,420.916Z" transform="translate(-503.005 -247.991)" fill="#34266c"/>
      <path id="Path_20630" data-name="Path 20630" d="M587.436,423.44c1.162.211,2.31.528,3.472.634,2.7.226,5.4.347,8.106.5.075,3.049.136,6.083.211,9.132l-1.9-.091.77-5.208c-.709,1.706-1.872,3.336-.845,5.3-5.163,0-10.325-.015-15.488-.015a10.938,10.938,0,0,1,.74-2.113C584.1,428.844,585.775,426.157,587.436,423.44Z" transform="translate(-533.229 -246.59)" fill="#f33f3f"/>
      <path id="Path_20631" data-name="Path 20631" d="M721.91,398.141c.211-.075.423-.166.634-.242,8.257,15.488,16.544,30.975,24.741,46.493.891,1.691,1.751,2.928,3.895,2.445.257-.06.559.06.966.438-.347.181-.709.513-1.057.513q-26.56-.068-53.12-.181c-5.781-.015-11.578,0-17.359,0q-17.457-.023-34.93-.03a11.508,11.508,0,0,1,1.872-.3c7.578-.015,15.14,0,22.718-.03a10.15,10.15,0,0,0,1.872-.332l1.9-.136c.558.06,1.132.106,1.691.166a9.633,9.633,0,0,0,1.706.3q17.118.023,34.236,0a9.633,9.633,0,0,0,1.706-.3c.664-.03,1.313-.091,1.977-.091q15.08-.023,30.16-.015h2.068c-.211-.543-.287-.815-.423-1.072q-7.834-14.718-15.684-29.435C728.265,410.263,725.1,404.195,721.91,398.141Z" transform="translate(-500.662 -259.603)" fill="#716a95"/>
      <path id="Path_20632" data-name="Path 20632" d="M686.384,351.05c1.238.513,1.54.377,1.585-.921.045-1.993.076-3.985-.015-5.963-.06-1.389.332-1.917,1.811-1.872,3.064.106,6.144.075,9.223.015a17.478,17.478,0,0,0,3.879-34.522,20.185,20.185,0,0,0-4.468-.513c-9.948-.045-19.9-.015-29.843-.03-.6,0-1.208-.06-1.811-.091,0-.181,0-.377-.015-.559.543-.045,1.072-.121,1.615-.121,10.129,0,20.258-.03,30.386,0a18.318,18.318,0,1,1,.257,36.636c-3.306.06-6.612.015-10.189.015v9.6c-.166.06-.317.136-.483.2-.634-.634-1.268-1.283-1.9-1.917C686.414,351.02,686.384,351.05,686.384,351.05Z" transform="translate(-489.937 -306.191)" fill="#716a95"/>
      <path id="Path_20633" data-name="Path 20633" d="M621.472,313.371c-.438-.377-.8-.966-1.3-1.087a24.474,24.474,0,0,0-4.423-.785c-1.993-.151-2.551.468-2.627,2.476-.045,1.3-.136,2.6-.2,3.562-1.3-.574-2.476-1.1-3.638-1.615a24.937,24.937,0,0,1,.362-5.117c.785-2.793,2.928-3.894,5.766-4.362,2.883-.468,4.755,1.645,7.517,2.068C622.423,310.232,621.94,311.8,621.472,313.371Z" transform="translate(-519.203 -306.235)" fill="#34266c"/>
      <path id="Path_20634" data-name="Path 20634" d="M705.275,343.85c.528-1.072,1.057-2.128,1.6-3.2-.151,2.008-.226,4.015-.468,5.993-.166,1.374.166,1.736,1.615,1.676,2.325-.075,4.649.211,6.974.347a9.672,9.672,0,0,1-1.615.045,3.9,3.9,0,0,0-3.638,1.4c-2.219,2.31-4.846,3.925-8.257,3.759-2.43-.121-3.653-1.132-4.317-3.472-.121-.408-.891-.634-1.359-.951.921-.151,1.827-.3,2.747-.438s1.857-.257,2.883-.392c.181-.921.347-1.827.528-2.747C703.388,345.737,704.957,345.828,705.275,343.85Z" transform="translate(-475.12 -288.772)" fill="#f5b596"/>
      <path id="Path_20635" data-name="Path 20635" d="M613.7,431.362l1.9.091h.091c.242.03.483.06.74.091l11.4.091c.106,0,.2.121.74.453H549.61v-.438h28.877c.438-1.449.8-2.626,1.162-3.789.166.045.332.106.483.151l-.543,3.306c.83.075,1.66.166,2.491.242h12.272l3.774-.091c5.162,0,10.325.015,15.488.015Z" transform="translate(-549.61 -244.338)" fill="#716a95"/>
      <path id="Path_20636" data-name="Path 20636" d="M635.233,348.595a1.9,1.9,0,0,0-.272-.453c-2.928-2.672-2.128-3.049-.74-6.038a11.542,11.542,0,0,0,.574-2.083c1.072-.559,2.128-1.132,3.2-1.691.483.091.951.211,1.434.272.679.091,1.359.136,2.038.211l.136,1c.015.257.045.5.06.755.242.77.468,1.525.709,2.294-.649,1.162-1.313,2.34-1.962,3.5a.791.791,0,0,0-.166.151c-.2.181-.377.362-.574.543a1.594,1.594,0,0,0-.181.151c-.453.211-.906.423-1.374.649-.272.03-.543.075-.815.106-.181.166-.362.347-.543.513-.06.151-.136.317-.2.468C636.108,348.821,635.671,348.7,635.233,348.595Z" transform="translate(-507.136 -289.954)" fill="#f4b89b"/>
      <path id="Path_20637" data-name="Path 20637" d="M699.219,331.63c2.113.362,4.211.709,6.038,1.026.347,1.011.755,2.038,1.072,3.11a2.5,2.5,0,0,1,.136,1.359c-.558,1.751-1.208,3.487-2.008,5.706-1.479-3.261-3.532-4.755-6.717-4.212C698.238,336.279,698.736,333.955,699.219,331.63Z" transform="translate(-474.137 -293.368)" fill="#f4b89b"/>
      <path id="Path_20638" data-name="Path 20638" d="M658.416,369.976c-.483-.045-1.042-.272-1.449-.106a5.954,5.954,0,0,0-1.4,1.087c-.242-.347-.483-.679-.725-1.026h0l-1.9-5.751c-.076-.634-.151-1.253-.226-1.977,2.823-.86,1.359-3.17,1.857-5.027-.77-.106-1.344-.181-1.917-.257,1.962-.664,2.219-.5,2.219,1.449,0,2.4,0,2.37,2.355,2.551a17.294,17.294,0,0,1,2.128.332c.695.136,1.389.332,2.566.619-.891,1.917-1.766,3.7-2.566,5.51C658.96,368.225,658.718,369.116,658.416,369.976Z" transform="translate(-497.11 -280.662)" fill="#f4b89b"/>
      <path id="Path_20639" data-name="Path 20639" d="M639.5,343.084c-.242-.77-.468-1.525-.71-2.294-.015-.257-.045-.5-.06-.755l-.136-1a3.97,3.97,0,0,1,.6-.576,7.4,7.4,0,0,1,.847-.541,28.554,28.554,0,0,1,3.774-.06c4,0,4,0,3.638,3.985-.241.543-.5,1.1-.74,1.645C644.054,345.137,641.111,344.971,639.5,343.084Z" transform="translate(-504.274 -290.21)" fill="#e2dfdf"/>
      <path id="Path_20640" data-name="Path 20640" d="M591.515,360.87c-.8-.091-1.585-.2-2.385-.287.619-3.774,1.268-7.548,1.857-11.336.423-2.7.8-5.419,1.208-8.121.287-1.344.574-2.672.86-4.015V343.1a5.738,5.738,0,0,1,7.064-.649h-5.57c.347.755.513,1.162.694,1.555-.694.06-1.374.106-2.249.181C592.5,349.865,592,355.36,591.515,360.87Z" transform="translate(-529.474 -290.575)" fill="#12859a"/>
      <path id="Path_20641" data-name="Path 20641" d="M643.526,332.165a3.1,3.1,0,0,1-.136-3.593c.634-1.253.589-2.838.845-4.287l1.1-.045v2.687c3.185-.2,6.174-.377,9.163-.559.045.166.076.317.121.483-3.019,2.279-6.159,4.287-10.008,5-.257.015-.528.015-.785.03C643.738,331.969,643.632,332.074,643.526,332.165Z" transform="translate(-502.085 -297.133)" fill="#f4b89b"/>
      <path id="Path_20642" data-name="Path 20642" d="M657.017,430.09c1.57.166,3.155.332,4.725.513.393.2.77.377,1.162.574-1.087.015-2.174.045-3.261.045H617.785c-2.113,0-4.211.015-6.325-.015a12.048,12.048,0,0,1-1.63-.211c.015-.181.015-.362.03-.543h3.457c.257-.03.513-.076.755-.106l.121-.015c1.721-.015,3.442-.045,5.162-.076h.045c.272-.015.543-.015.815-.03h.03a20.186,20.186,0,0,0,2.143.2c7.548-.03,15.1-.091,22.643-.136,0,0,.06,0,.06-.015.151.045.3.091.438.136,3.5,0,7.019-.015,10.521-.015.241-.06.468-.121.709-.181A.575.575,0,0,1,657.017,430.09Z" transform="translate(-518.927 -243.201)" fill="#716a95"/>
      <path id="Path_20643" data-name="Path 20643" d="M652.95,378.256a6.586,6.586,0,0,1-1.691.574c-2.626.106-5.268.106-7.895.151q-11.525-.045-23.05-.06c-.091,0-.181.136-.317.257.091.845.2,1.736.3,2.612-1.238-.6-1.615-1.494-.528-3.019h-2.264c-4.876,0-9.752.03-14.627,0-1.4-.015-2.626-.015-1.993,1.962.015.075-.241.226-.362.347-.03-.045-.06-.106-.091-.151-1.313-2.521-1.313-2.521,1.63-2.536q24.477-.159,48.953-.3C651.636,378.09,652.3,378.2,652.95,378.256Z" transform="translate(-524.143 -269.696)" fill="#110338"/>
      <path id="Path_20644" data-name="Path 20644" d="M695.745,376.819l3.713.091c.151.468.287.921.438,1.389-.589.03-1.177.045-1.781.075H685.042v-.03c-.075-1.781.77-1.766,1.962-.83.513-1.555.121-2.128-1.419-2.113-5.479.06-10.959.03-16.439.03h-1.932c0-.2-.015-.392-.015-.589h19.276c-.272-1.66-.468-2.913-.664-4.181.468,1.132.875,2.279,1.4,3.4a12.112,12.112,0,0,0,1.026,1.509c-.06,1.026.362,1.494,1.434,1.374a16.208,16.208,0,0,1,1.917-.03C692.967,376.864,694.356,376.834,695.745,376.819Z" transform="translate(-489.697 -273.481)" fill="#118499"/>
      <path id="Path_20645" data-name="Path 20645" d="M667.221,319.835a3.186,3.186,0,0,1-6.37-.151,3.29,3.29,0,0,1,3.185-3.064A3.221,3.221,0,0,1,667.221,319.835Z" transform="translate(-492.933 -301.015)" fill="#f33f3f"/>
      <path id="Path_20646" data-name="Path 20646" d="M715.113,383.065a29.693,29.693,0,0,0-.558-3.472c-.091-.317-.77-.649-1.208-.664-1.857-.075-3.713,0-5.57-.045a10.5,10.5,0,0,1-1.887-.393,5.18,5.18,0,0,1,1.464-.408q12.906-.023,25.828,0a1.049,1.049,0,0,1,.86.438c-6.129.377-12.287.287-18.612.347.272,1.555.5,2.9.77,4.468C715.777,383.231,715.445,383.141,715.113,383.065Z" transform="translate(-469.984 -269.705)" fill="#716a95"/>
      <path id="Path_20647" data-name="Path 20647" d="M588.377,378.225c-1.51,6.959-2.989,13.812-4.468,20.65-.241-.045-.468-.091-.709-.151,1.359-6.506,2.717-13.027,4.166-19.91H564.98v-.6C572.724,378.225,580.422,378.225,588.377,378.225Z" transform="translate(-541.779 -269.635)" fill="#c7c1fb"/>
      <path id="Path_20648" data-name="Path 20648" d="M685.77,363.128a44.726,44.726,0,0,0-6.295-.649c-6.491.226-12.967.664-19.1,1,.694,2.853,1.449,5.963,2.219,9.072h-.317c-1.162-3.351-2.325-6.687-3.562-10.295.921-.075,1.479-.151,2.053-.151,7.532,0,15.065-.03,22.6.045A7.83,7.83,0,0,1,685.77,363.128Zm-24.318-.619c.015.091.015.166.03.257.242-.03.5-.076.74-.106-.015-.076-.015-.136-.03-.211C661.95,362.464,661.694,362.494,661.452,362.51Z" transform="translate(-494.018 -277.845)" fill="#118499"/>
      <path id="Path_20649" data-name="Path 20649" d="M671.715,322.945a3.247,3.247,0,0,1-3.155-3.276,3.28,3.28,0,0,1,3.2-3.049,3.163,3.163,0,1,1-.045,6.325Z" transform="translate(-489.004 -301.015)" fill="#f33f3f"/>
      <path id="Path_20650" data-name="Path 20650" d="M682.6,319.765a3.276,3.276,0,0,1-3.049,3.185,3.525,3.525,0,0,1-3.291-3.185,3.17,3.17,0,0,1,6.34,0Z" transform="translate(-485.081 -301.005)" fill="#f33f3f"/>
      <path id="Path_20651" data-name="Path 20651" d="M722.83,407.221a4.123,4.123,0,0,1,6.747-.226c.574.679,1.132,1.374,1.736,2.008,2.189,2.294,4.483,1.857,5.812-1.072a4.1,4.1,0,0,1,4.544-2.385c-2.2,1.842-4.438,3.774-6.747,5.63-1.147.921-2.294.453-3.245-.392a15.356,15.356,0,0,1-1.8-2.023c-2.476-3.125-3.427-3.306-6.747-1.253C723.026,407.417,722.936,407.327,722.83,407.221Z" transform="translate(-461.353 -255.806)" fill="#e68f7b"/>
      <path id="Path_20652" data-name="Path 20652" d="M746.328,431.044c-9.419.075-18.839-.045-28.258.091v-.725h28.288C746.358,430.621,746.343,430.833,746.328,431.044Z" transform="translate(-463.778 -243.038)" fill="#e68f7b"/>
      <path id="Path_20653" data-name="Path 20653" d="M723.608,410.553c-.74-1.011-1.4-2.083-2.234-3.019-1.645-1.857-3.864-1.721-5.374.242-.438.574-.86,1.147-1.328,1.691-2.536,2.808-5.495,2.476-7.472-.86l.3-.3a3.616,3.616,0,0,1,.725.5c2.2,2.762,4.408,1.721,6.1-.317a18.048,18.048,0,0,1,2.128-2.4,4.238,4.238,0,0,1,5.012.076c.468.362.951.679,1.419,1.011.151.589.317,1.177.513,1.947.227-.347.347-.528.468-.694.091.423.181.86.272,1.283C723.971,410.01,723.789,410.281,723.608,410.553Z" transform="translate(-469.317 -255.832)" fill="#e68f7b"/>
      <path id="Path_20654" data-name="Path 20654" d="M682.728,315.51c2.43.347,3.955,3.125,3.562,5.676a5.964,5.964,0,0,1-6.9,5.1c-3.276-.574-5.389-3.23-4.71-6.264.694,3.411,2.445,5.751,6.113,5.54a4.869,4.869,0,0,0,4.423-3.472C686.155,319.45,685.083,317.442,682.728,315.51Z" transform="translate(-485.949 -301.581)" fill="#716a95"/>
      <path id="Path_20655" data-name="Path 20655" d="M719.9,414c-.121.181-.241.347-.468.694-.211-.77-.362-1.359-.513-1.947q-1.947-8.989-3.895-17.963c-.015-.091.076-.211.377-.362C717.285,400.835,718.523,407.432,719.9,414Z" transform="translate(-465.333 -261.376)" fill="#716a95"/>
      <path id="Path_20656" data-name="Path 20656" d="M627.02,375c.453-.785.724-1.917,1.389-2.234.528-.242,1.615.408,2.294.875,1.54,1.057,2.989,2.249,4.483,3.4-1.464-.528-2.928-1.042-4.408-1.57-.181.6-.347,1.177-.513,1.751C629.194,376.481,628.107,375.741,627.02,375Z" transform="translate(-510.169 -272.434)" fill="#e68f7b"/>
      <path id="Path_20657" data-name="Path 20657" d="M585.342,381.08c-.03,3.789-.015,7.563-.121,11.351a6.88,6.88,0,0,0,1.645,5.344c1.691,1.857,1.268,5.661-.483,7.412-.211.211-.664.166-1.011.257,0-.2.015-.408.015-.6a15.722,15.722,0,0,0,1.072-1.177c1.3-1.781.921-5.781-1.344-6.129-.015-.211-.03-.423-.045-.649-.015-.332-.015-.679-.03-1.011C585.146,390.937,585.236,386.016,585.342,381.08Z" transform="translate(-531.558 -268.172)" fill="#f33f3f"/>
      <path id="Path_20658" data-name="Path 20658" d="M629.6,344.221l-11.412.091c-.453-.77-.906-1.54-1.389-2.34-.528.83-1.011,1.6-1.509,2.37-.408-2.068.559-3.125,2.732-3.472.091.8.2,1.645.317,2.747,3.729-.483,7.548.966,11.065-1.132C629.465,343.074,629.525,343.647,629.6,344.221Z" transform="translate(-516.192 -288.66)" fill="#12859a"/>
      <path id="Path_20659" data-name="Path 20659" d="M626.4,320.97c1.344,2.491,2.34,5.057,3.97,7.125,1.66,2.1,3.955,3.7,5.812,5.389C632.514,333.529,626.28,325.378,626.4,320.97Z" transform="translate(-510.485 -298.799)" fill="#716a95"/>
      <path id="Path_20660" data-name="Path 20660" d="M714.718,378.747c-.166.03-.347.045-.513.075-.906-.045-1.8-.136-2.7-.136-12-.015-24,0-36-.015a13.847,13.847,0,0,1-1.751-.211c.891-.06,1.8-.166,2.687-.166q18.25-.023,36.5,0A8.822,8.822,0,0,1,714.718,378.747Z" transform="translate(-486.36 -269.598)" fill="#716a95"/>
      <path id="Path_20661" data-name="Path 20661" d="M591.324,374.707c.5-.347.981-.709,1.479-1.057,1.66-.649,1.4,1.54,2.521,1.706l.03.03c.091.121.181.257.272.377.256.408.5.83.755,1.238l-1.525.045-1.3-.045h-2.2c-1-.015-1.993-.015-3-.03C589.361,376.217,590.342,375.462,591.324,374.707Z" transform="translate(-529.872 -272.019)" fill="#34266c"/>
      <path id="Path_20662" data-name="Path 20662" d="M718.07,409.06c.181-.272.362-.543.543-.83l.015.045c.091.468.2.951.287,1.419l2.808,12.861a3.335,3.335,0,0,1,.015,1.449c-1.177-1.268-1.072-3-1.464-4.529-.453-1.736-.77-3.517-1.132-5.283C718.764,412.472,718.417,410.766,718.07,409.06Z" transform="translate(-463.778 -254.339)" fill="#716a95"/>
      <path id="Path_20663" data-name="Path 20663" d="M644.058,326.875a.728.728,0,0,1,0,.181c-.709,1.389-1.223,2.777,0,4.151-.966.015-1.947.045-2.913.06-.513-.408-1.042-.815-1.63-1.283.649-.166,1.238-.317,1.842-.468a2.714,2.714,0,0,0-1.8-.468c-1.057.091-1.389-.423-1.283-1.374.241-.03.483-.06.725-.076.619.347,1.253.694,2.128,1.177v-1.645c.483-.106.966-.226,1.449-.332.408,1.63,1.011-.362,1.479.075Z" transform="translate(-504.443 -295.828)" fill="#f4b89b"/>
      <path id="Path_20664" data-name="Path 20664" d="M572.385,396.95c.6-2.144.211-3.4-1.223-3.8a2.4,2.4,0,0,0-2.793,1.691c-.332,1.434.679,2.415,3.064,2.928a2.329,2.329,0,0,1-3.457-.906,2.989,2.989,0,0,1,1.132-4.2,3.048,3.048,0,0,1,4.166,1.3C573.91,395.274,573.563,396.452,572.385,396.95Z" transform="translate(-540.474 -262.456)" fill="#716a95"/>
      <path id="Path_20665" data-name="Path 20665" d="M580.182,395.666a2.821,2.821,0,0,1-2.808,2.687,3.042,3.042,0,1,1-.06-6.083C579.065,392.285,580.2,393.629,580.182,395.666Zm-.3.075c-.3-1.585-1.449-2.747-2.642-2.642a2.241,2.241,0,0,0-2.174,2.2c-.091,1.132,1.253,2.536,2.294,2.2A9.211,9.211,0,0,0,579.88,395.742Z" transform="translate(-537.041 -262.471)" fill="#716a95"/>
      <path id="Path_20666" data-name="Path 20666" d="M648.633,342.062c.347-3.985.347-3.985-3.638-3.985a28.574,28.574,0,0,0-3.774.06c-.528.075-.966.725-1.449,1.117-.679-.06-1.359-.121-2.038-.211-.483-.06-.951-.181-1.434-.272,1.51-1.811,3.578-1.3,5.51-1.3,1.857,0,3.713-.015,5.57,0,2.083.03,2.279.211,2.038,2.294A10.569,10.569,0,0,1,648.633,342.062Z" transform="translate(-505.441 -290.425)" fill="#fff"/>
      <path id="Path_20667" data-name="Path 20667" d="M663.18,374.81c1.132.226,2.264.468,3.4.694,6.566,1.328,13.223.392,19.835.755a6.232,6.232,0,0,1-1.359.287c-6.355.015-12.71.045-19.05-.015C664.825,376.516,663.331,376.667,663.18,374.81Z" transform="translate(-491.745 -271.367)" fill="#118499"/>
      <path id="Path_20668" data-name="Path 20668" d="M576.882,399.6c-.921,4.363-1.811,8.589-2.732,12.967C573.334,411.072,575.538,400.732,576.882,399.6Z" transform="translate(-537.197 -258.736)" fill="#716a95"/>
      <path id="Path_20669" data-name="Path 20669" d="M586.776,396.328a2.619,2.619,0,0,1-3.185,1.9,2.676,2.676,0,0,1-2.506-2.611A2.793,2.793,0,0,1,583,392.524a2.9,2.9,0,0,1,3.593,1.208,6.063,6.063,0,0,1,.362.619c.574.83.362,1.343-.619,1.54-.075-.468.015-1.162-.257-1.374-.74-.574-1.736-1.389-2.445-1.253a2.735,2.735,0,0,0-1.706,2.068,2.782,2.782,0,0,0,1.736,2.053c.755.151,1.691-.725,2.566-1.162C586.414,396.253,586.595,396.3,586.776,396.328Z" transform="translate(-533.581 -262.453)" fill="#716a95"/>
      <path id="Path_20670" data-name="Path 20670" d="M639.485,327.38c-.106.951.226,1.464,1.283,1.374a2.63,2.63,0,0,1,1.8.468c-.589.151-1.192.3-1.841.468.6.468,1.117.876,1.63,1.283l-1.419-.045c-.513-.106-1.026-.226-1.54-.332a13.854,13.854,0,0,1-2.627-.453c-.951-.347-1.344-1.026-.257-1.8.257-.106.528-.2.785-.3C638.035,327.833,638.76,327.606,639.485,327.38Zm-.815,2.128c.211.272.3.392.392.513.121-.091.347-.211.332-.257a.874.874,0,0,0-.3-.468C639.032,329.267,638.82,329.433,638.669,329.508Z" transform="translate(-505.667 -295.533)" fill="#f5b596"/>
      <path id="Path_20671" data-name="Path 20671" d="M585.038,396.493c-.181-.03-.362-.075-.558-.106a1.327,1.327,0,0,1,.106-.347c.981-.2,1.208-.709.619-1.54.06-.845.121-1.675.181-2.521,2.279.347,2.642,4.347,1.344,6.129a15.735,15.735,0,0,1-1.072,1.177l-.317-1C585.265,397.686,585.144,397.1,585.038,396.493Z" transform="translate(-531.844 -262.619)" fill="#34266c"/>
      <path id="Path_20672" data-name="Path 20672" d="M588.005,391.1c.015.332.015.679.03,1.011-4.121-1.977-6.325-.875-8.816,4.2a10.751,10.751,0,0,1,.483-2.657C581.122,390.6,584.247,389.694,588.005,391.1Z" transform="translate(-534.523 -263.397)" fill="#e68f7b"/>
      <path id="Path_20673" data-name="Path 20673" d="M715.169,395.292q-1.132-5.276-2.249-10.536c.257-.06.5-.121.755-.166l2.219,10.551A6.2,6.2,0,0,0,715.169,395.292Z" transform="translate(-466.402 -266.384)" fill="#716a95"/>
      <path id="Path_20674" data-name="Path 20674" d="M645.382,431.065c-.392-.2-.77-.377-1.162-.574.06-.076.136-.136.2-.211.664.045,1.313.106,1.977.121H672.9a9.931,9.931,0,0,1-1.872.332c-7.578.03-15.14,0-22.718.03a11.506,11.506,0,0,0-1.872.3Z" transform="translate(-501.406 -243.105)" fill="#34266c"/>
      <path id="Path_20675" data-name="Path 20675" d="M639.852,341.31c1.615,1.887,4.559,2.038,7.231.408-.332.513-.634,1.419-1,1.449-1.706.121-3.472,1.253-5.193-.121-.211-.166-.966.242-1.4.5a15.925,15.925,0,0,0-1.6,1.268C638.554,343.65,639.2,342.487,639.852,341.31Z" transform="translate(-504.631 -288.435)" fill="#e2dfdf"/>
      <path id="Path_20676" data-name="Path 20676" d="M585.23,398.76a4.951,4.951,0,0,1,.317,1.162q.068,11.729.091,23.473a4.219,4.219,0,0,1-.241,1.027c-.06-3.351-.136-6.687-.2-10.038Q585.223,406.594,585.23,398.76Z" transform="translate(-531.477 -259.164)" fill="#716a95"/>
      <path id="Path_20677" data-name="Path 20677" d="M586.346,400.085c-.015,5.208-.015,10.431-.03,15.638v-17.1c-1.374.226-2.34.392-3.306.543.981-1.208,3.245-.725,3.094-3l.317,1c0,.2-.015.408-.015.6C586.391,398.53,586.376,399.315,586.346,400.085Z" transform="translate(-532.592 -260.489)" fill="#e68f7b"/>
      <path id="Path_20678" data-name="Path 20678" d="M572.06,418.547c.679-3.23,1.374-6.461,2.083-9.827C574.913,409.867,573.509,417.113,572.06,418.547Z" transform="translate(-538.172 -254.09)" fill="#716a95"/>
      <path id="Path_20679" data-name="Path 20679" d="M600.033,323.96c-.272.377-.468.906-.845,1.087-1.525.725-2.747,1.555-2.823,3.5a1.891,1.891,0,0,1-2.415,1.947C595.158,327.553,596.712,324.941,600.033,323.96Z" transform="translate(-527.018 -297.275)" fill="#12859a"/>
      <path id="Path_20680" data-name="Path 20680" d="M661.07,369.02h.317c.709,1.434,1.449,2.853,2.128,4.3.468,1.026.845,2.083,1.3,3.215l-.589,1.177c-.543-1.374-1.132-2.717-1.63-4.106C662.051,372.1,661.568,370.56,661.07,369.02Z" transform="translate(-492.82 -274.317)" fill="#118499"/>
      <path id="Path_20681" data-name="Path 20681" d="M593.26,374.322c-.981.755-1.962,1.525-2.944,2.279-1.917-.045-3.849-.076-5.766-.121.287-.242.574-.694.845-.679a12.528,12.528,0,0,0,7.155-1.464C592.747,374.232,593.033,374.322,593.26,374.322Z" transform="translate(-531.808 -271.634)" fill="#f4b89b"/>
      <path id="Path_20682" data-name="Path 20682" d="M721.559,421.79c.634,2.974,1.283,5.948,1.917,8.921l-.543.136c-1.072-2.853-1.389-5.9-2.083-8.861C721.091,421.926,721.318,421.85,721.559,421.79Z" transform="translate(-462.362 -247.43)" fill="#716a95"/>
      <path id="Path_20683" data-name="Path 20683" d="M594.756,328.52c.136,1.721.272,3.442.408,5.178-.181.015-.347.045-.528.06-.136-.574-.287-1.162-.528-2.159-.453,1.66-.77,2.959-1.177,4.227a4.172,4.172,0,0,1-.709,1.026C593.08,334.075,593.911,331.3,594.756,328.52Z" transform="translate(-527.9 -294.952)" fill="#12859a"/>
      <path id="Path_20684" data-name="Path 20684" d="M613.154,323.837c-2.325-1.132-2.793-3.215-2.974-5.857,1.283,1.54,2.325,2.808,3.381,4.076-.03.211-.06.423-.091.649-.106.362-.211.74-.317,1.1Z" transform="translate(-518.749 -300.322)" fill="#e68f7b"/>
      <path id="Path_20685" data-name="Path 20685" d="M606.637,372.4c.091.83.181,1.645.272,2.476a7.31,7.31,0,0,1-2.4-.211,2.035,2.035,0,0,1-.03-1.826C604.992,372.415,605.9,372.506,606.637,372.4Z" transform="translate(-521.757 -272.595)" fill="#110338"/>
      <path id="Path_20686" data-name="Path 20686" d="M572.706,340.97h10.114c0,.226.015.468.015.694-3.26.06-6.521.106-9.766.166-.136-.045-.287-.106-.423-.151-.03-.226-.045-.453-.076-.664Z" transform="translate(-537.912 -288.609)" fill="#91172f"/>
      <path id="Path_20687" data-name="Path 20687" d="M703.28,339.578a23.192,23.192,0,0,1,1.585-3.185c.256-.377,1.072-.362,1.645-.513.166,1.555.06,2.913-1.993,3.079C704.08,338.99,703.688,339.367,703.28,339.578Z" transform="translate(-471.314 -291.202)" fill="#f4b89b"/>
      <path id="Path_20688" data-name="Path 20688" d="M606.925,372.909c-.74.121-1.645.03-2.159.423a2.035,2.035,0,0,0,.03,1.827,6.961,6.961,0,0,0,2.4.211c.287.377.558.755.845,1.132a3.737,3.737,0,0,0-1.253-.2c-1.6.287-2.793-.332-3.034-1.676-.257-1.343.574-2.294,2.2-2.672a3.8,3.8,0,0,0,.981-.558C606.94,371.913,606.94,372.411,606.925,372.909Z" transform="translate(-522.046 -273.104)" fill="#c7c1fb"/>
      <path id="Path_20689" data-name="Path 20689" d="M600.34,380.56a3.862,3.862,0,0,1,.634.891c.151.377.015,1.011.257,1.193,2.34,1.706.755,4.2,1.3,6.249C601.8,386.1,601.08,383.337,600.34,380.56Z" transform="translate(-523.763 -268.437)" fill="#110338"/>
      <path id="Path_20690" data-name="Path 20690" d="M645.763,325.142l-1.1.045-2.611-2.566.121-.121c1.162,0,2.325.015,3.487.015.045.785.091,1.585.136,2.37A.232.232,0,0,1,645.763,325.142Z" transform="translate(-502.511 -298.019)" fill="#e68f7b"/>
      <path id="Path_20691" data-name="Path 20691" d="M718.727,410.53c-.09-.468-.2-.951-.287-1.419,2.762,1.238,3.683.981,5.646-1.494.287-.377.664-.679.981-1.027.091.106.2.2.287.3C723.874,410.017,722.44,410.8,718.727,410.53Z" transform="translate(-463.59 -255.175)" fill="#e68f7b"/>
      <path id="Path_20692" data-name="Path 20692" d="M634.075,317.36c.151.332.528.8.423.981-1.193,1.842-.679,3.608.121,5.374-2.2-1.419-2.506-2.883-1.087-5A7.093,7.093,0,0,0,634.075,317.36Z" transform="translate(-507.292 -300.638)" fill="#716a95"/>
      <path id="Path_20693" data-name="Path 20693" d="M645.35,324.161c3.215-.045,6.431-.075,9.631-.121a43.908,43.908,0,0,1-4.86.543A42.7,42.7,0,0,1,645.35,324.161Z" transform="translate(-500.83 -297.235)" fill="#716a95"/>
      <path id="Path_20694" data-name="Path 20694" d="M572.319,420.247c-.5,2.053-1,4.106-1.479,6.174-.241-.06-.468-.136-.709-.2.513-2.1,1.011-4.2,1.525-6.295C571.866,420.036,572.092,420.141,572.319,420.247Z" transform="translate(-539.155 -248.378)" fill="#716a95"/>
      <path id="Path_20695" data-name="Path 20695" d="M613.361,377.017H610.84c.649-1.132,1.238-2.144,2.008-3.487C613.029,374.843,613.195,375.855,613.361,377.017Z" transform="translate(-518.413 -272.019)" fill="#110338"/>
      <path id="Path_20696" data-name="Path 20696" d="M626.637,362.044c-.121-1.268-.227-2.536-.347-3.8.74.785,1.479,1.555,2.415,2.551C627.875,361.289,627.256,361.667,626.637,362.044Z" transform="translate(-510.541 -279.81)" fill="#f33f3f"/>
      <path id="Path_20697" data-name="Path 20697" d="M624.83,371.19c2.687,1.162,2.959,2.34.891,3.97C625.434,373.832,625.132,372.518,624.83,371.19Z" transform="translate(-511.285 -273.211)" fill="#f4b89b"/>
      <path id="Path_20698" data-name="Path 20698" d="M629.18,376.281c.166-.574.332-1.147.513-1.751,1.479.528,2.944,1.057,4.408,1.57a.513.513,0,0,0,.091.226v.015c-.725.045-1.449.076-2.174.121h-.679c-.724-.045-1.434-.091-2.159-.121Z" transform="translate(-509.068 -271.51)" fill="#f33f3f"/>
      <path id="Path_20699" data-name="Path 20699" d="M622.48,365.42a7.148,7.148,0,0,1,.966,1.615c.438,1.51.755,3.049,1.132,4.574C623.869,369.541,623.174,367.488,622.48,365.42Z" transform="translate(-512.482 -276.151)" fill="#f4b89b"/>
      <path id="Path_20700" data-name="Path 20700" d="M679.01,375.77h13.072c-2.476.106-4.951.272-7.442.287C682.784,376.057,680.9,375.876,679.01,375.77Z" transform="translate(-483.68 -270.878)" fill="#c7c1fb"/>
      <path id="Path_20701" data-name="Path 20701" d="M710.67,376.22c.86-1.3,2.174-1.479,3.578-1.449C713.538,376.447,712.406,377.05,710.67,376.22Z" transform="translate(-467.549 -271.388)" fill="#f4b89b"/>
      <path id="Path_20702" data-name="Path 20702" d="M697.49,397.845c3.88,0,7.759-.015,11.638-.015C705.249,397.83,701.369,397.845,697.49,397.845Z" transform="translate(-474.264 -259.638)" fill="#716a95"/>
      <path id="Path_20703" data-name="Path 20703" d="M703.308,342.77c-.317,1.962-1.887,1.887-3.321,2.038-.106-.589-.211-1.193-.317-1.781C700.893,342.936,702.1,342.861,703.308,342.77Z" transform="translate(-473.153 -287.692)" fill="#e68f7b"/>
      <path id="Path_20704" data-name="Path 20704" d="M693.99,375.88c2.415-1.253,4.83-.272,7.261-.015-.3.06-.6.106-.921.166-.226.015-.453.015-.679.03-.136,0-.272.015-.423.015-.709.015-1.4.015-2.113.03h-1.1C695.349,376.016,694.669,375.941,693.99,375.88Z" transform="translate(-476.047 -271.139)" fill="#f33f3f"/>
      <path id="Path_20705" data-name="Path 20705" d="M708.438,408.53c-1.253-1-2.506-1.993-3.668-2.913,1.57-.483,2.823.272,3.97,2.611Z" transform="translate(-470.555 -255.741)" fill="#e68f7b"/>
      <path id="Path_20706" data-name="Path 20706" d="M574.4,341c.03.226.045.453.075.664h-5.51c-.015-.226-.015-.453-.03-.664Z" transform="translate(-539.761 -288.593)" fill="#716a95"/>
      <path id="Path_20707" data-name="Path 20707" d="M605.86,371.456l8.348-.226C611.415,371.29,608.638,371.381,605.86,371.456Z" transform="translate(-520.95 -273.191)" fill="#c7c1fb"/>
      <path id="Path_20708" data-name="Path 20708" d="M627.519,367.965c-.257-.377-.695-.755-.725-1.147-.091-1.193-.015-2.385,0-3.578C627.036,364.81,627.278,366.395,627.519,367.965Z" transform="translate(-510.306 -277.262)" fill="#f4b89b"/>
      <path id="Path_20709" data-name="Path 20709" d="M623.86,369.52c1.374.332,1.555,1.343,1.464,2.521C624.841,371.2,624.358,370.35,623.86,369.52Z" transform="translate(-511.779 -274.062)" fill="#f4b89b"/>
      <path id="Path_20710" data-name="Path 20710" d="M628.754,370.35c-1.736-.86-1.54-2.445-1.494-3.97C627.758,367.708,628.256,369.022,628.754,370.35Z" transform="translate(-510.062 -275.662)" fill="#f4b89b"/>
      <path id="Path_20711" data-name="Path 20711" d="M678.028,365.693c-1.494-.483-1.479-1.676-1.374-2.913C677.122,363.746,677.575,364.727,678.028,365.693Z" transform="translate(-484.901 -277.496)" fill="#118499"/>
      <path id="Path_20712" data-name="Path 20712" d="M592.464,334.25a25.4,25.4,0,0,1-.015,2.838c-.045.423-.453.785-.709,1.177C591.982,336.937,592.223,335.593,592.464,334.25Z" transform="translate(-528.144 -292.033)" fill="#12859a"/>
      <path id="Path_20713" data-name="Path 20713" d="M640.16,375.8h0Z" transform="translate(-503.474 -270.863)" fill="#f5b596"/>
      <path id="Path_20714" data-name="Path 20714" d="M601.86,375.844h5.661Q604.69,375.821,601.86,375.844Z" transform="translate(-522.988 -270.846)" fill="#f4b89b"/>
      <path id="Path_20715" data-name="Path 20715" d="M640.878,327.02v1.645c-.876-.483-1.51-.83-2.128-1.177a.46.46,0,0,1,.317-.015c.377-.106.755-.226,1.132-.332C640.41,327.1,640.637,327.05,640.878,327.02Z" transform="translate(-504.192 -295.716)" fill="#f5b596"/>
      <path id="Path_20716" data-name="Path 20716" d="M698.19,375.826c.3-.06.6-.106.921-.166,1.51.045,3.019.075,4.529.121Z" transform="translate(-473.907 -270.934)" fill="#f4b89b"/>
      <path id="Path_20717" data-name="Path 20717" d="M689,376.189c-.151-.468-.287-.921-.438-1.389.513.468,1.011.936,1.525,1.4C689.722,376.2,689.36,376.189,689,376.189Z" transform="translate(-478.814 -271.372)" fill="#f4b89b"/>
      <path id="Path_20718" data-name="Path 20718" d="M636.38,344.849c.453-.211.906-.423,1.374-.649C637.361,344.562,637.286,345.559,636.38,344.849Z" transform="translate(-505.4 -286.963)" fill="#fff"/>
      <path id="Path_20719" data-name="Path 20719" d="M593.935,376.36c-.257-.408-.5-.83-.755-1.238a2.622,2.622,0,0,0,.075-.332c.468.513.936,1.011,1.419,1.525Z" transform="translate(-527.411 -271.377)" fill="#f4b89b"/>
      <path id="Path_20720" data-name="Path 20720" d="M690.06,375.74h0Z" transform="translate(-478.05 -270.893)" fill="#f4b89b"/>
      <path id="Path_20721" data-name="Path 20721" d="M694.3,375.67c.679.06,1.359.136,2.038.2-.981-.03-1.962-.045-2.944-.075C693.692,375.745,693.994,375.715,694.3,375.67Z" transform="translate(-476.353 -270.929)" fill="#f4b89b"/>
      <path id="Path_20722" data-name="Path 20722" d="M594.63,376.117c0-.377,0-.74.015-1.117.347.377.679.755,1.026,1.117Z" transform="translate(-526.672 -271.27)" fill="#f4b89b"/>
      <path id="Path_20723" data-name="Path 20723" d="M634.47,345.13c.438.106.891.226,1.328.332C635.074,346.443,634.7,346.036,634.47,345.13Z" transform="translate(-506.373 -286.489)" fill="#fff"/>
      <path id="Path_20724" data-name="Path 20724" d="M571.961,430.381c-.83-.075-1.66-.166-2.491-.242C570.3,430.215,571.13,430.306,571.961,430.381Z" transform="translate(-539.491 -243.176)" fill="#c7c1fb"/>
      <path id="Path_20725" data-name="Path 20725" d="M652.78,323.547c.03-.664.06-1.313.106-1.977C652.84,322.234,652.81,322.883,652.78,323.547Z" transform="translate(-497.044 -298.493)" fill="#716a95"/>
      <path id="Path_20726" data-name="Path 20726" d="M629.18,375.73c.724.045,1.434.091,2.159.121C630.614,375.805,629.9,375.76,629.18,375.73Z" transform="translate(-509.068 -270.898)" fill="#f5b596"/>
      <path id="Path_20727" data-name="Path 20727" d="M631.06,375.851c.725-.045,1.449-.076,2.174-.121C632.509,375.775,631.785,375.805,631.06,375.851Z" transform="translate(-508.111 -270.898)" fill="#f5b596"/>
      <path id="Path_20728" data-name="Path 20728" d="M652.2,324.137c.242-.362.5-.725.74-1.087C652.7,323.4,652.441,323.775,652.2,324.137Z" transform="translate(-497.34 -297.739)" fill="#716a95"/>
      <path id="Path_20729" data-name="Path 20729" d="M583.523,375.25c.121.211.241.438.347.649-.287-.106-.574-.2-.86-.287C583.176,375.492,583.357,375.371,583.523,375.25Z" transform="translate(-532.592 -271.143)" fill="#f4b89b"/>
      <path id="Path_20730" data-name="Path 20730" d="M635.48,345.213c.181-.166.362-.347.543-.513C635.842,344.866,635.661,345.032,635.48,345.213Z" transform="translate(-505.859 -286.708)" fill="#c7c1fb"/>
      <path id="Path_20731" data-name="Path 20731" d="M635.37,375.815c.5,0,1-.015,1.51-.015C636.366,375.8,635.868,375.8,635.37,375.815Z" transform="translate(-505.915 -270.863)" fill="#f5b596"/>
      <path id="Path_20732" data-name="Path 20732" d="M638.21,329.51c.513.106,1.026.226,1.54.332C639.236,329.736,638.723,329.631,638.21,329.51Z" transform="translate(-504.468 -294.448)" fill="#f4b89b"/>
      <path id="Path_20733" data-name="Path 20733" d="M637.41,344.283c.2-.181.377-.362.574-.543C637.787,343.921,637.591,344.1,637.41,344.283Z" transform="translate(-504.875 -287.197)" fill="#c7c1fb"/>
      <path id="Path_20734" data-name="Path 20734" d="M591.81,375.83l1.3.045Z" transform="translate(-528.109 -270.847)" fill="#f4b89b"/>
      <path id="Path_20735" data-name="Path 20735" d="M640.082,327.1c-.377.106-.755.226-1.132.332C639.327,327.311,639.7,327.206,640.082,327.1Z" transform="translate(-504.091 -295.676)" fill="#f4b89b"/>
      <path id="Path_20736" data-name="Path 20736" d="M651.75,324.162c.226-.136.453-.257.679-.392C652.2,323.906,651.976,324.027,651.75,324.162Z" transform="translate(-497.569 -297.372)" fill="#716a95"/>
      <path id="Path_20737" data-name="Path 20737" d="M612.16,322.2c.106-.362.211-.74.317-1.1C612.371,321.477,612.266,321.84,612.16,322.2Z" transform="translate(-517.74 -298.733)" fill="#f4b89b"/>
      <path id="Path_20738" data-name="Path 20738" d="M641.159,430.17c-.242.06-.468.121-.709.181C640.691,430.291,640.918,430.23,641.159,430.17Z" transform="translate(-503.326 -243.161)" fill="#c7c1fb"/>
      <path id="Path_20739" data-name="Path 20739" d="M599.21,375.82c.211.015.408.03.619.06C599.617,375.85,599.421,375.835,599.21,375.82Z" transform="translate(-524.338 -270.852)" fill="#f4b89b"/>
      <path id="Path_20740" data-name="Path 20740" d="M643.51,329.31c.257-.015.528-.015.785-.03C644.038,329.3,643.782,329.3,643.51,329.31Z" transform="translate(-501.767 -294.565)" fill="#f5b596"/>
      <path id="Path_20741" data-name="Path 20741" d="M637.085,327.83c-.257.106-.528.211-.785.3C636.557,328.026,636.813,327.921,637.085,327.83Z" transform="translate(-505.441 -295.304)" fill="#f4b89b"/>
      <path id="Path_20742" data-name="Path 20742" d="M598.26,375.855c.2,0,.393-.015.6-.015C598.652,375.855,598.456,375.855,598.26,375.855Z" transform="translate(-524.822 -270.842)" fill="#f4b89b"/>
      <path id="Path_20743" data-name="Path 20743" d="M579.479,430.3h0Z" transform="translate(-534.722 -243.095)" fill="#c7c1fb"/>
      <path id="Path_20744" data-name="Path 20744" d="M590.36,375.84h0Z" transform="translate(-528.848 -270.842)" fill="#f4b89b"/>
      <path id="Path_20745" data-name="Path 20745" d="M594.13,430.331c-.241-.03-.483-.06-.74-.091Z" transform="translate(-527.304 -243.125)" fill="#c7c1fb"/>
      <path id="Path_20746" data-name="Path 20746" d="M612.895,430.25c-.257.03-.513.076-.755.106C612.381,430.31,612.638,430.28,612.895,430.25Z" transform="translate(-517.75 -243.12)" fill="#c7c1fb"/>
      <path id="Path_20747" data-name="Path 20747" d="M709,375.74h0Z" transform="translate(-468.4 -270.893)" fill="#f4b89b"/>
      <path id="Path_20748" data-name="Path 20748" d="M697.47,375.8c.136,0,.272-.015.423-.015A4.1,4.1,0,0,1,697.47,375.8Z" transform="translate(-474.274 -270.873)" fill="#f4b89b"/>
      <path id="Path_20749" data-name="Path 20749" d="M634.64,375.8a4.237,4.237,0,0,1,.438.015A4.237,4.237,0,0,0,634.64,375.8Z" transform="translate(-506.286 -270.863)" fill="#f5b596"/>
      <path id="Path_20750" data-name="Path 20750" d="M695.79,375.8h0Z" transform="translate(-475.13 -270.863)" fill="#f4b89b"/>
      <path id="Path_20751" data-name="Path 20751" d="M599.06,375.8v0Z" transform="translate(-524.415 -270.924)" fill="#f4b89b"/>
      <path id="Path_20752" data-name="Path 20752" d="M681.97,371.66c.091.106.2.2.287.3C682.151,371.856,682.061,371.751,681.97,371.66Z" transform="translate(-482.172 -272.972)" fill="#f5b596"/>
      <path id="Path_20753" data-name="Path 20753" d="M633.628,430.346c-.151-.045-.287-.091-.438-.136A3.7,3.7,0,0,0,633.628,430.346Z" transform="translate(-507.025 -243.14)" fill="#c7c1fb"/>
      <path id="Path_20754" data-name="Path 20754" d="M595.34,375.77c.121.045.226.075.347.121C595.566,375.845,595.461,375.815,595.34,375.77Z" transform="translate(-526.31 -270.878)" fill="#f4b89b"/>
      <path id="Path_20755" data-name="Path 20755" d="M682.19,371.89c.106.106.2.211.3.317C682.4,372.1,682.3,372,682.19,371.89Z" transform="translate(-482.059 -272.855)" fill="#f5b596"/>
      <path id="Path_20756" data-name="Path 20756" d="M606.841,375.248c-.075-.151-.166-.287-.241-.438C606.675,374.961,606.766,375.1,606.841,375.248Z" transform="translate(-520.573 -271.367)" fill="#c7c1fb"/>
      <path id="Path_20759" data-name="Path 20759" d="M674.631,423.965c.03,3.306.075,6.6.106,9.9l-1.9.136H646.327c-.664,0-1.313-.076-1.977-.121.423-.483.755-1.162,1.283-1.434,2.747-1.434,5.57-2.747,8.333-4.166.468-.242.785-.77,1.177-1.162.272.091.619.332.8.242,2.37-1.1,4.74-2.234,7.08-3.412.211-.106.272-.483.392-.74C667.144,423.467,670.887,423.708,674.631,423.965Zm-1.917,3.125c-.483.347-.966.71-1.449,1.057l-.392.347c.181-.06.347-.121.528-.181.483-.362.966-.725,1.449-1.1l.951-.362c-.091-.151-.181-.287-.272-.438Zm-2.445,2.264c-.2-.136-.392-.272-.589-.393-.815,1.4-1.63,2.808-2.445,4.227.166.091.317.181.483.287C668.563,432.1,669.408,430.727,670.268,429.354Z" transform="translate(-501.339 -246.707)" fill="#118499"/>
      <path id="Path_20760" data-name="Path 20760" d="M668.7,434.213c1.283-2.9,2.581-5.781,3.819-8.695.393-.921.649-1.9.966-2.838,3.245,1,6.506,1.977,9.751,2.974.121.106.226.226.347.332l-.015-.045c.468,2.762.951,5.51,1.419,8.272Z" transform="translate(-488.933 -246.977)" fill="#118499"/>
      <path id="Path_20762" data-name="Path 20762" d="M678.691,401.276a7.852,7.852,0,0,0-2.113-.74c-3.925-.106-3.91-.076-4.529-3.985-.181-1.177-.468-2.325-.709-3.487,2.974-.211,5.948-.423,9.268-.664C679.914,395.6,679.295,398.438,678.691,401.276Z" transform="translate(-487.588 -262.405)" fill="#118499"/>
      <path id="Path_20763" data-name="Path 20763" d="M665.228,396.34q-.249,11.276-.5,22.567c.015-5.751,0-11.5.075-17.239C664.821,399.887,665.077,398.106,665.228,396.34Z" transform="translate(-490.956 -260.397)" fill="#716a95"/>
      <path id="Path_20764" data-name="Path 20764" d="M671.5,392.84l-1.827.181Z" transform="translate(-488.439 -262.181)" fill="#a4a0f5"/>
      <path id="Path_20765" data-name="Path 20765" d="M678.677,424.982c-.121-.106-.227-.226-.347-.332C678.451,424.756,678.556,424.876,678.677,424.982Z" transform="translate(-484.026 -245.973)" fill="#fefdfd"/>
      <path id="Path_20767" data-name="Path 20767" d="M590.71,358.536c.5-5.51.981-11,1.494-16.665.876-.075,1.555-.121,2.249-.181,1.917.045,3.834.03,5.736.151a4.59,4.59,0,0,1,1.434.634c-2.415,0-4.83.015-7.231-.03-.981-.015-1.223.332-1.434,1.313-1.042,4.861-.6,9.766-.649,14.642-.015,1.132-.408,1.54-1.479,1.419C590.785,359.381,590.74,358.959,590.71,358.536Z" transform="translate(-528.669 -288.242)" fill="#f4b89b"/>
      <path id="Path_20768" data-name="Path 20768" d="M599.456,345.747c-.332-1.177-.664-2.34-1-3.517a7.181,7.181,0,0,1,1.63.543A20.058,20.058,0,0,1,599.456,345.747Z" transform="translate(-524.72 -287.967)" fill="#f4b89b"/>
      <path id="Path_20770" data-name="Path 20770" d="M652.84,361.62l1.9,5.751c-.121-.015-.317,0-.332-.045C653.882,365.424,653.368,363.522,652.84,361.62Z" transform="translate(-497.013 -278.087)" fill="#8f2f35"/>
      <path id="Path_20771" data-name="Path 20771" d="M654.1,365.43c.241.347.483.679.724,1.026.106.664.211,1.343.317,2.008-.2.03-.377.06-.574.106C654.4,367.513,654.251,366.472,654.1,365.43Z" transform="translate(-496.372 -276.146)" fill="#8f2f35"/>
      <path id="Path_20772" data-name="Path 20772" d="M666.84,335.085c.906-.649,1.434-1.313,1.811-1.223.513.106.921.77,1.359,1.193-.423.408-.815,1.057-1.3,1.147C668.3,336.263,667.776,335.674,666.84,335.085Z" transform="translate(-489.88 -292.234)" fill="#fefdfd"/>
      <path id="Path_20773" data-name="Path 20773" d="M671.614,336.894c-.694-.906-1.328-1.389-1.374-1.917-.03-.362.74-1.117,1.162-1.117.468-.015,1.328.589,1.359.981C672.806,335.354,672.218,335.913,671.614,336.894Z" transform="translate(-488.148 -292.231)" fill="#fefdfd"/>
      <path id="Path_20774" data-name="Path 20774" d="M665.6,336.788c-.574-.83-1.177-1.313-1.147-1.766.03-.438.725-1.177,1.087-1.162a1.658,1.658,0,0,1,1.223,1.087C666.805,335.415,666.171,335.928,665.6,336.788Z" transform="translate(-491.099 -292.231)" fill="#fefdfd"/>
      <path id="Path_20775" data-name="Path 20775" d="M646.941,317.456c-.362.408-.725.8-1.177,1.3,0-.86.211-1.509-.045-1.827a2.36,2.36,0,0,1-.106-2.838C646.066,315.222,646.5,316.339,646.941,317.456Z" transform="translate(-500.911 -302.304)" fill="#f4b89b"/>
      <path id="Path_20776" data-name="Path 20776" d="M646.43,320.54c-.015-1.328-.015-2.642-.03-3.97A3.671,3.671,0,0,1,646.43,320.54Z" transform="translate(-500.295 -301.041)" fill="#f4b89b"/>
      <path id="Path_20777" data-name="Path 20777" d="M671.139,372.279c-.694.257-1.555.875-2.038.664a2.96,2.96,0,0,1-1.479-1.9,23.047,23.047,0,0,1-.06-4.181c1.449.453,2.521.77,3.593,1.1-1.223.091-2.068.589-2.159,1.947C668.875,371.449,669.841,372.007,671.139,372.279Z" transform="translate(-489.546 -275.418)" fill="#118499"/>
      <path id="Path_20778" data-name="Path 20778" d="M670.513,367.8c.362-.166.876-.559,1.042-.453,1.162.785,2.325,1.691,1.827,3.336-.513,1.721-1.993,1.389-3.291,1.328C672.1,370.622,672.2,369.52,670.513,367.8Z" transform="translate(-488.225 -275.179)" fill="#118499"/>
      <path id="Path_20779" data-name="Path 20779" d="M671.336,367.671c1.691,1.706,1.585,2.808-.423,4.227l-.136-.015-.136.015c-1.3-.257-2.264-.815-2.159-2.37.091-1.344.951-1.842,2.159-1.947C670.883,367.625,671.109,367.64,671.336,367.671Zm1.3,1.962c-1.1-.6-1.736-1.238-2.325-1.193-.5.045-.921.875-1.374,1.359.5.453,1.011,1.283,1.509,1.283C671.019,371.082,671.607,370.357,672.634,369.633Z" transform="translate(-489.048 -275.051)" fill="#fefdfd"/>
      <path id="Path_20780" data-name="Path 20780" d="M687.516,375.183c-1.389.015-2.778.045-4.166.06a5.263,5.263,0,0,1,4.559-1.328C687.743,374.429,687.622,374.806,687.516,375.183Z" transform="translate(-481.469 -271.846)" fill="#fefdfd"/>
      <path id="Path_20781" data-name="Path 20781" d="M593.821,376.253c-1.117-.151-.86-2.355-2.521-1.706.83-.785,1.66-1.585,2.928-2.778C594.078,373.551,593.942,374.895,593.821,376.253Z" transform="translate(-528.369 -272.916)" fill="#e68f7b"/>
      <path id="Path_20782" data-name="Path 20782" d="M593.347,374.805c-.03.106-.045.226-.076.332-.091-.121-.181-.257-.272-.377A1.288,1.288,0,0,1,593.347,374.805Z" transform="translate(-527.503 -271.393)" fill="#e68f7b"/>
      <path id="Path_20783" data-name="Path 20783" d="M617.607,432.36c.272-3.155-2.023-4.68-4.347-6.4a5.915,5.915,0,0,1,4.785,4.453c.136.634.3,1.268.453,1.917h-.03c-.272.015-.543.015-.815.03Z" transform="translate(-517.18 -245.306)" fill="#fefdfd"/>
      <path id="Path_20784" data-name="Path 20784" d="M616.251,313.37c-.075,1.449-.151,2.883-.226,4.332-.227-.015-.453-.03-.664-.06.091-1.449.181-2.883.287-4.332C615.843,313.34,616.039,313.355,616.251,313.37Z" transform="translate(-516.11 -302.702)" fill="#e68f7b"/>
      <path id="Path_20785" data-name="Path 20785" d="M642.2,327.951c.106-1.057-1.223-2.43,1.1-3.261a10.964,10.964,0,0,1,.257,2.566c-.03.287-.891.468-1.358.694Z" transform="translate(-502.581 -296.904)" fill="#f4b89b"/>
      <path id="Path_20786" data-name="Path 20786" d="M642.182,322.743l-.362-.362.121-.121.362.362Z" transform="translate(-502.628 -298.142)" fill="#e68f7b"/>
      <path id="Path_20787" data-name="Path 20787" d="M641.846,322.422c-.03-.075-.075-.166-.106-.242.075.03.151.075.241.106Z" transform="translate(-502.669 -298.182)" fill="#e68f7b"/>
      <path id="Path_20788" data-name="Path 20788" d="M651.5,424.63v0Z" transform="translate(-497.696 -245.983)" fill="#a4a0f5"/>
      <path id="Path_20789" data-name="Path 20789" d="M592.147,432.028c-1.026-1.962.136-3.593.845-5.3l-.77,5.208C592.237,431.938,592.147,432.028,592.147,432.028Z" transform="translate(-528.144 -244.913)" fill="#fefdfd"/>
      <path id="Path_20790" data-name="Path 20790" d="M670.285,430.325c5.434,0,10.853,0,16.288-.015,3.955,0,7.895,0,11.85.015l.891.045,3.925.045a9.633,9.633,0,0,1-1.706.3q-17.118.023-34.236,0a9.633,9.633,0,0,1-1.706-.3Z" transform="translate(-490.517 -243.089)" fill="#34266c"/>
      <path id="Path_20791" data-name="Path 20791" d="M638.68,339.3c.015.257.045.5.06.755C638.725,339.8,638.7,339.557,638.68,339.3Z" transform="translate(-504.228 -289.46)" fill="#e68f7b"/>
      <path id="Path_20792" data-name="Path 20792" d="M616.17,430.21c.272-.015.544-.015.815-.03C616.713,430.18,616.442,430.2,616.17,430.21Z" transform="translate(-515.697 -243.156)" fill="#c7c1fb"/>
      <path id="Path_20793" data-name="Path 20793" d="M660.53,362.39c.257-.015.5-.045.755-.06.015.075.015.136.03.211-.242.03-.5.075-.74.106A.7.7,0,0,1,660.53,362.39Z" transform="translate(-493.095 -277.726)" fill="#118499"/>
      <path id="Path_20794" data-name="Path 20794" d="M579.612,395.459a10.187,10.187,0,0,1-2.506,1.781c-1.042.332-2.385-1.072-2.294-2.2a2.22,2.22,0,0,1,2.174-2.2C578.147,392.712,579.31,393.874,579.612,395.459Z" transform="translate(-536.772 -262.189)" fill="#fefdfd"/>
      <path id="Path_20795" data-name="Path 20795" d="M586.038,395.557a1.325,1.325,0,0,0-.106.347c-.86.423-1.811,1.3-2.566,1.162a2.731,2.731,0,0,1-1.736-2.053,2.766,2.766,0,0,1,1.706-2.068c.709-.151,1.706.679,2.445,1.253C586.068,394.4,585.977,395.09,586.038,395.557Z" transform="translate(-533.296 -262.136)" fill="#fefdfd"/>
      <path id="Path_20796" data-name="Path 20796" d="M637.72,328.859c.151-.075.362-.242.423-.2a.775.775,0,0,1,.3.468c.015.045-.211.166-.332.257C638.022,329.266,637.931,329.146,637.72,328.859Z" transform="translate(-504.717 -294.883)" fill="#f4b89b"/>
      <path id="Path_20797" data-name="Path 20797" d="M688.46,427.264q1.177-10.28,2.355-20.544c.181.015.377.045.558.06-.3,6.914-1.479,13.721-2.128,20.6C688.973,427.355,688.717,427.31,688.46,427.264Z" transform="translate(-478.865 -255.109)" fill="#716a95"/>
      <path id="Path_20798" data-name="Path 20798" d="M688.231,433.529l-.891-.045c.347-3.125.679-6.249,1.026-9.374.211.015.438.03.649.06C688.759,427.28,688.487,430.4,688.231,433.529Z" transform="translate(-479.436 -246.248)" fill="#716a95"/>
      <path id="Path_20799" data-name="Path 20799" d="M662.544,427.418c-.845,1.374-1.706,2.732-2.551,4.106-.166-.091-.317-.181-.483-.287.815-1.4,1.63-2.808,2.445-4.227A5.8,5.8,0,0,0,662.544,427.418Z" transform="translate(-493.615 -244.771)" fill="#c7c1fb"/>
      <path id="Path_20800" data-name="Path 20800" d="M663.765,425.906l-1.449,1.087c-.045-.06-.091-.106-.136-.166.483-.347.966-.71,1.449-1.057A.575.575,0,0,1,663.765,425.906Z" transform="translate(-492.255 -245.403)" fill="#c7c1fb"/>
      <path id="Path_20801" data-name="Path 20801" d="M663.14,426c.272-.226.543-.453.815-.664.091.151.181.287.272.438l-.951.362A.3.3,0,0,0,663.14,426Z" transform="translate(-491.766 -245.622)" fill="#c7c1fb"/>
      <path id="Path_20802" data-name="Path 20802" d="M662.458,426.646c-.181.06-.347.121-.528.181l.392-.347A1.3,1.3,0,0,0,662.458,426.646Z" transform="translate(-492.382 -245.041)" fill="#c7c1fb"/>
      <path id="Path_20803" data-name="Path 20803" d="M672.478,369.343c-1.026.725-1.6,1.449-2.189,1.449-.5,0-1-.815-1.51-1.283.453-.483.891-1.313,1.374-1.359C670.742,368.105,671.376,368.739,672.478,369.343Z" transform="translate(-488.892 -274.761)" fill="#118499"/>
    </g>
  </g>
  <rect id="Rectangle_7559" data-name="Rectangle 7559" width="5" height="3" transform="translate(189 92)" fill="#12859a"/>
  <rect id="Rectangle_7560" data-name="Rectangle 7560" width="5" height="3" transform="translate(186 92)" fill="#12859a"/>
</g>
</svg>
`;
const circle = `<svg xmlns="http://www.w3.org/2000/svg" width="13.678" height="13.712" viewBox="0 0 13.678 13.712">
<g id="Group_44" data-name="Group 44" transform="translate(-0.999 -11.395)">
  <path id="Path_20804" data-name="Path 20804" d="M7.326,11.4a6.867,6.867,0,1,0,7.351,7.714l-2.892-.369A3.951,3.951,0,1,1,7.555,14.3Z" transform="translate(0)" fill="#d9d9d9"/>
  <path id="Path_20805" data-name="Path 20805" d="M7.326,11.4a6.867,6.867,0,0,0-6.072,8.7l2.808-.786a3.951,3.951,0,0,1,3.494-5Z" transform="translate(-0.001)" fill="#ee1f1f"/>
</g>
</svg>
`;
const TabBar = ({
  state,
  descriptors,
  navigation,
  position,
  onClick,
  onPress,
}) => {
  const ref = React.useRef();
  const packages = useSelector((state) => state.packages);

  const dispatch = useDispatch();

  React.useEffect(() => {
    //console.log(packages[state.index-1])
    //console.log(state.index);
    if (ref) {
      ref.current.scrollTo({ x: state.index * 80, animated: true });
    }
  }, [state.index]);

  return (
    <View
      style={{
        flexDirection: "row",
        borderBottomColor: "#E9E6E6",
        borderBottomWidth: 0.5,
      }}>
      <ScrollView
        ref={ref}
        showsHorizontalScrollIndicator={false}
        horizontal={true}>
        {packages.map((doc, index) => {
          const isFocused = state.index === index;

          const [Visible, setVisible] = React.useState(false);
          const [Title, setTitle] = React.useState();
          const [id, setId] = React.useState();
          React.useEffect(() => {
            //console.log(packages[state.index-1])
            if (packages.length > index) {
              setTitle(`${packages[index].name} ${packages[index].price}৳`);
              setId(packages[index].id);
            }
          }, [index]);
          return (
            <View key={index}>
              <Pressable
                onPress={() => {
                  navigation.navigate(doc.id);
                }}
                style={{
                  borderBottomColor: "#707070",
                  paddingHorizontal: 20,
                  flexDirection: "row",
                  alignItems: "center",
                  marginLeft: 5,
                  height: 40,
                  justifyContent: "center",
                }}>
                <Text
                  style={{
                    fontSize: 16,
                  }}>
                  {Title}

                  {/* {packages[state.index].name+" "+packages[state.index].price+"৳"} */}
                </Text>

                <Menu
                  contentStyle={{
                    backgroundColor: "white",
                  }}
                  visible={Visible}
                  onDismiss={() => setVisible(!Visible)}
                  anchor={
                    <Entypo
                      onPress={() => {
                        setVisible(true);
                      }}
                      style={{
                        marginLeft: 10,
                      }}
                      name="dots-three-vertical"
                      size={18}
                      color="black"
                    />
                  }>
                  <Menu.Item
                    onPress={() => {
                      onClick(packages[index]);
                      setVisible(false);
                    }}
                    title="Edit"
                  />
                  <Menu.Item
                    onPress={() => {
                      onPress(id);
                      setVisible(false);
                    }}
                    title="Delete"
                  />
                </Menu>
              </Pressable>
              {isFocused && (
                <View
                  style={{
                    height: 2,
                    backgroundColor: "#707070",
                    width: "80%",
                    alignSelf: "center",
                  }}
                />
              )}
            </View>
          );
        })}
        <View
          onLayout={() => {
            if (ref) {
              ref.current.scrollTo({ x: 10000, animated: true });
            }
          }}>
          <Pressable
            onPress={() => {
              navigation.navigate("Add Package");
            }}
            style={{
              borderBottomColor: "#707070",
              paddingHorizontal: 20,
              flexDirection: "row",
              alignItems: "center",
              marginLeft: 5,
              height: 40,
              justifyContent: "center",
            }}>
            <SvgXml
              style={{
                marginRight: 10,
              }}
              xml={plus}
              height="15"
              width="15"
            />

            <Text
              style={{
                fontSize: 16,
              }}>
              Add Package
            </Text>
          </Pressable>
          {state.index == packages.length && (
            <View
              style={{
                height: 2,
                backgroundColor: "#707070",
                width: "80%",
                alignSelf: "center",
              }}
            />
          )}
        </View>
      </ScrollView>
    </View>
  );
};
const plus = `<svg xmlns="http://www.w3.org/2000/svg" width="12.261" height="12.261" viewBox="0 0 12.261 12.261">
<g id="ios-add-circle-outline" transform="translate(-3.375 -3.375)">
  <path id="Path_20806" data-name="Path 20806" d="M16.318,13.179h-2.2v-2.2a.472.472,0,0,0-.943,0v2.2h-2.2a.452.452,0,0,0-.472.472.456.456,0,0,0,.472.472h2.2v2.2a.457.457,0,0,0,.472.472.469.469,0,0,0,.472-.472v-2.2h2.2a.472.472,0,0,0,0-.943Z" transform="translate(-4.145 -4.145)" fill="#9d9d9d"/>
  <path id="Path_20807" data-name="Path 20807" d="M9.506,4.2A5.3,5.3,0,1,1,5.753,5.753,5.272,5.272,0,0,1,9.506,4.2m0-.825a6.131,6.131,0,1,0,6.131,6.131A6.13,6.13,0,0,0,9.506,3.375Z" fill="#9d9d9d"/>
</g>
</svg>
`;
const rightIcon = `<svg id="_5611871" data-name="5611871" xmlns="http://www.w3.org/2000/svg" width="10.559" height="10.559" viewBox="0 0 10.559 10.559">
<g id="_00ba00ff" data-name="#00ba00ff">
  <path id="Path_20813" data-name="Path 20813" d="M5.144,0h.27A5.289,5.289,0,0,1,10.2,3.364a5.35,5.35,0,0,1,.358,1.781v.268A5.289,5.289,0,0,1,6.445,10.43a5.523,5.523,0,0,1-1.031.13H5.146A5.284,5.284,0,0,1,0,5.415V5.127A5.542,5.542,0,0,1,.157,4,5.291,5.291,0,0,1,5.144,0M4.31,1.825A.7.7,0,0,0,4,2.991Q5.146,4.136,6.29,5.279L4.013,7.557A.7.7,0,0,0,4.93,8.62c.1-.081.188-.181.282-.271l3.07-3.07L5.09,2.088a1.393,1.393,0,0,0-.184-.167A.711.711,0,0,0,4.31,1.825Z" fill="#00ba00"/>
</g>
<g id="_ffffffff" data-name="#ffffffff" transform="translate(3.804 1.798)">
  <path id="Path_20814" data-name="Path 20814" d="M184.939,87.2a.711.711,0,0,1,.6.1,1.4,1.4,0,0,1,.184.167l3.191,3.191-3.07,3.07c-.094.09-.18.19-.282.271a.7.7,0,0,1-.917-1.063l2.277-2.278q-1.143-1.145-2.288-2.288a.7.7,0,0,1,.307-1.166Z" transform="translate(-184.432 -87.171)" fill="#fff"/>
</g>
</svg>
`;
const computer = `<svg xmlns="http://www.w3.org/2000/svg" width="252.893" height="124.138" viewBox="0 0 252.893 124.138">
<g id="Untitled-1" transform="translate(-511.45 -202.443)">
  <g id="Group_10218" data-name="Group 10218" transform="translate(511.45 202.443)">
    <path id="Path_20816" data-name="Path 20816" d="M525.292,307.5c-.2-.2-.53-.405-.561-.639-.53-3.663-.951-7.326-1.559-10.974-1.2-7.264-.374-14.45.7-21.636.686-4.52,1.4-9.025,2.354-13.483a30.3,30.3,0,0,1,2.385-6.921c2-4.146,4.146-8.246,6.438-12.236a58.433,58.433,0,0,1,15.821-17.287,127.1,127.1,0,0,1,14.777-9.181c7.825-4.365,16.367-6.968,25.049-8.947,5.269-1.2,10.709-1.715,16.055-2.588,8.137-1.325,16.336-1.247,24.519-1.06a67.835,67.835,0,0,1,17.209,2.51,25.9,25.9,0,0,1,12.439,7.576,2.967,2.967,0,0,0,1.574.686c1.013.187,2.057.234,3.086.343-1.387.062-2.775.125-4.162.2q-24.387-.023-48.789-.031a8.983,8.983,0,0,0-1.278.171c-8.215.764-12.252,5.752-13.577,13.514H566.849c-3.164,0-4.614,1.4-4.614,4.52q-.023,36.709,0,73.4c0,3.273,1.418,4.614,4.739,4.614h36.444c4.863,0,9.711-.031,14.574-.062.047.405.109.811.156,1.2-.14,1.294-.3,2.588-.436,3.881-.327,2.962-.343,5.97-2.167,8.573a3.487,3.487,0,0,1-3.2,1.715q-32.968-.094-65.951-.047h-1.933a20.038,20.038,0,0,1,.218-2.447c.5-2.26,1.247-4.474,1.559-6.749.546-3.944.857-7.918,1.216-11.878a11,11,0,0,0-.14-2.011c-.265-2.977-.857-6,1.434-8.558a2.049,2.049,0,0,0,.3-1.216c.171-3.1-2.977-4.3-3.959-6.765-.094-.249-1.029-.234-1.574-.234-4.489-.016-8.963.031-13.452-.031-1.855-.031-3.569-.078-3.8,2.385-.016.171-.14.452-.249.468-2.213.3-2.073,2.213-2.447,3.679a3.617,3.617,0,0,0,.5,2c.265.67.92,1.278.951,1.948C525.152,299.767,525.2,303.633,525.292,307.5Zm41.151-82.957v-4.972C565.227,220.333,565.04,222.9,566.443,224.541Zm-9.836,7.825c.951-.343,1.793-.655,2.619-.951a12.056,12.056,0,0,0-2.6-.592,9.731,9.731,0,0,0-2.323.514C555.049,231.665,555.781,231.992,556.607,232.366Zm4.567-5.705a4.043,4.043,0,0,0-3.835-3.429C558.712,224.448,559.912,225.539,561.175,226.661Z" transform="translate(-505.231 -202.443)" fill="#d7eaf0"/>
    <path id="Path_20817" data-name="Path 20817" d="M658.668,255.575c1.964-.125,3.944-.312,5.908-.343,7.077-.156,12.408,2.993,16.429,8.651a10.387,10.387,0,0,0,1.543,1.434c-.437.951-.857,1.9-1.294,2.853-3.616-1.793-3.866-1.637-4.146,2.743-1.948-.218-1.917,1.169-1.73,2.447a30.872,30.872,0,0,0,.935,3.523c-3.585,2.338-4.318,5.908-3.975,9.789.343,3.928,2.634,6.8,6.079,9.088H638.841c-.031-.546-.062-.966-.078-1.387-.062-3.086-.624-3.819-3.616-3.975-2.915-.14-5.845-.171-8.776-.078-3.71.109-5.253.016-5.113,4.848a3.6,3.6,0,0,1-.249.764H610.643a11.406,11.406,0,0,0-2.416-.031c-1.761.343-2.743-.686-3.336-1.98-1.933-4.209-1.668-8.76-2.151-13.359h2.135c15.915,0,31.845-.078,47.76.047,4.193.031,6.126-1.076,5.97-5.845C658.45,268.372,658.637,261.966,658.668,255.575Z" transform="translate(-460.441 -172.95)" fill="#d7eaf0"/>
    <path id="Path_20818" data-name="Path 20818" d="M625.81,216.083c1.341-1.808,2.572-3.71,4.022-5.424,3.819-4.489,8.885-6.578,14.621-7.373a22.834,22.834,0,0,1,16.679,4.084c6.609,4.6,9.961,11.083,10.288,19.157A23.344,23.344,0,0,1,663.859,245c-5.035,4.879-11.192,6.8-18.113,6.516q-.047-9.656-.078-19.313c0-1.715-.374-3.242-1.933-4.24l-.374-.327c-.748-.109-1.5-.234-2.245-.343h-9.353A15.065,15.065,0,0,0,625.81,216.083Z" transform="translate(-447.551 -202.106)" fill="#d7eaf0"/>
    <path id="Path_20819" data-name="Path 20819" d="M661.7,295.675h10.366a3.591,3.591,0,0,0,.249-.764c-.14-4.832,1.418-4.739,5.113-4.848,2.915-.094,5.861-.078,8.776.078,2.977.156,3.554.888,3.616,3.975.016.421.047.842.078,1.387h39.577c-3.445-2.307-5.736-5.159-6.079-9.088-.343-3.881.39-7.451,3.975-9.789a27.253,27.253,0,0,1-.935-3.523c-.187-1.278-.218-2.665,1.73-2.447.281-4.38.53-4.536,4.146-2.743.436-.951.857-1.9,1.294-2.853,1.434-1.808,1.9-1.808,3.04.156.468.795.842,1.637,1.247,2.447,3.913-1.107,3.913-1.107,4.209,2.806,2.182.733,2.354,2.089.717,6.048,3.476,2.369,4.4,5.876,4.053,9.789-.343,3.85-2.432,6.8-5.5,9.321h22.8c.062.249.109.5.171.748a7.824,7.824,0,0,1-1.808.436c-10.21.031-20.435.016-30.645.016q-109.027,0-218.055-.031a9.677,9.677,0,0,1-2.385-.639,10.278,10.278,0,0,1,2.307-.53c6.718-.047,13.437-.031,20.451-.031-.156-1.886-.3-3.647-.437-5.409-.031-.171-.062-.359-.094-.53-.016-.265-.047-.53-.062-.795a.191.191,0,0,0-.094-.3c-.2-.2-.405-.39-.624-.592-.125-.187-.265-.359-.39-.546q-.468-4.84-.951-9.68c-.094-3.866-.14-7.731-.327-11.582-.031-.655-.686-1.278-.951-1.948a3.9,3.9,0,0,1-.5-2c.374-1.465.234-3.383,2.447-3.679.109-.016.234-.3.249-.468.234-2.463,1.948-2.416,3.8-2.385,4.489.062,8.963.016,13.452.031.546,0,1.481-.016,1.574.234.982,2.463,4.131,3.679,3.959,6.765a2.169,2.169,0,0,1-.3,1.216c-2.276,2.572-1.683,5.58-1.434,8.558a11.011,11.011,0,0,1,.14,2.011c-.374,3.959-.67,7.934-1.216,11.878-.312,2.276-1.06,4.489-1.559,6.749a20.086,20.086,0,0,0-.218,2.447h1.933q32.968,0,65.951.047a3.474,3.474,0,0,0,3.2-1.715c1.824-2.6,1.839-5.612,2.167-8.573.14-1.294.3-2.588.436-3.881.39.171.764.343,1.154.514-.655,4.583-.094,9.43-3.32,13.624h2.634q12.462.047,24.924.078c.358.249.717.686,1.076.7q4.91.07,9.82,0C660.982,296.376,661.34,295.924,661.7,295.675Zm82.645-11.94h0c.2-.078.561-.109.608-.265.717-2.073-1.777-5.689-4.006-5.705-3.6-.047-7.217.109-10.818-.047a4.576,4.576,0,0,0-4.785,3.055c-.5,1.091-1.091,2.447.265,3.071a5.089,5.089,0,0,0,3.725.249c2.245-1,2.7-1.185,4.349.53,1.013,1.044,1.808,1.013,2.806-.016,1.777-1.839,2.7-1.824,4.739-.078.3.436.592.873,1,1.465.67-.592,1.185-1.06,1.715-1.512C744.063,284.218,744.2,283.984,744.344,283.735ZM536,287.257c.171,0,.343,0,.53-.016,1.356,0,2.712-.016,4.068-.016h10.366c.156-.842.265-1.434.39-2.026.016-.14.031-.3.047-.436.358-3.8.7-7.607,1.06-11.441H532.556c.218,3.928.421,7.7.624,11.472.109.39.218.764.327,1.153C533.693,287.585,535,287.133,536,287.257ZM745.4,285.2c-2.323,1.793-2.666,1.746-5.487.062-.889-.546-1.871-.826-2.759.3-1.294,1.637-2.837,1.7-4.209.094-1.122-1.309-1.948-1.45-3.133-.094-1.434,1.637-2.759,1.621-4.3.156-.265-.249-.561-.483-.951-.811.156,6.329,5.3,11.13,11.192,10.662C741.382,295.129,746.012,290.172,745.4,285.2ZM533.117,271.717h18.658c.187-1.98.358-3.85.561-5.876-6.749-.312-13.3-.608-19.952-.9C532.633,267.4,532.867,269.534,533.117,271.717Zm16.819,17.941c-5.082-.265-10.007-.514-15.1-.779.249,2.416.468,4.536.686,6.578h13.857C549.562,293.508,549.733,291.684,549.936,289.658Zm4.053-26.546c-.561-3.164-.561-3.18-3.554-3.18H534.192c-2.915,0-2.915,0-3.258,3.18Zm134.505,32.422c.031-.483.062-.779.078-1.091.047-2.588-.047-2.884-2.556-2.977-3.523-.14-7.046.016-10.568.031-1.372,0-1.855.748-1.808,2.011.031.655,0,1.309,0,2.026ZM735.1,265.17a11.827,11.827,0,0,0-1.465,10.615c.125.39,1.06.717,1.606.717a1.656,1.656,0,0,0,1.309-.842A11.762,11.762,0,0,0,735.1,265.17Zm-201.3-6.562h17.24c.109-1.216-.3-1.715-1.465-1.715-4.739.047-9.462.047-14.2,0C534.161,256.908,533.662,257.376,533.8,258.608Zm198.492,17.8a4.457,4.457,0,0,0-4.52-4.193C727.665,275.5,728.632,277.281,732.295,276.409Zm5.674-.047c3.476.608,4.8-.639,4.38-4.146A4.22,4.22,0,0,0,737.969,276.362Zm-8.09-8.074c-.888,2.213-.53,2.977,1.73,3.757C732.17,269.316,732.092,269.145,729.879,268.287Zm10.568-.078c-2.369.92-2.479,1.169-1.855,3.9C740.852,271.14,740.868,271.093,740.447,268.209Z" transform="translate(-511.45 -172.694)" fill="#32505a"/>
    <path id="Path_20820" data-name="Path 20820" d="M621.373,316.4c-.358.249-.7.686-1.076.7q-4.91.094-9.82,0c-.358,0-.717-.452-1.076-.7,1.138-.047,2.26-.094,3.819-.171-3.4-3.835-2.6-8.464-3.476-12.642-6.219-.265-12.252-.514-18.284-.764-.951-.062-1.9-.125-2.853-.2-1.153.016-2.307.047-3.445.062-.39-.171-.764-.343-1.153-.514-.047-.405-.109-.811-.156-1.2-.078-.359-.156-.733-.234-1.091.624-.031,1.247-.078,1.855-.078q37.808-.023,75.6-.016c.561,0,1.122.031,1.683-.016,1.839-.14,2.743-1,2.759-2.821.031-2.478-.031-4.972-.047-7.451.031-.468.047-.951.062-1.418a7.755,7.755,0,0,0,.639-2.1c.047-10.444.031-20.887.031-31.331v-31.69c0-.9.265-1.948-1.06-2.245l-.374-.374c-.016-.577-.031-1.169-.047-1.746.748.109,1.5.234,2.245.343l.374.327c1.559,1,1.917,2.525,1.933,4.24q.023,9.657.078,19.313,0,15.876-.016,31.752v.717c0,.249.016.5.016.748-.016,6.406-.2,12.8-.016,19.2.14,4.77-1.793,5.876-5.97,5.845-15.915-.125-31.845-.047-47.76-.047H613.47c.483,4.6.218,9.15,2.151,13.359.592,1.294,1.59,2.323,3.336,1.98A12.541,12.541,0,0,1,621.373,316.4Z" transform="translate(-471.125 -193.421)" fill="#1f4554"/>
    <path id="Path_20821" data-name="Path 20821" d="M651.658,212.332a15.264,15.264,0,0,1,6,11.207H665.5a6.342,6.342,0,0,1-1.871.639c-10.241.047-20.5.016-30.739.047a14.448,14.448,0,0,0-2.135.327.414.414,0,0,1-.3.062,6.5,6.5,0,0,1-.795-1.325,10.387,10.387,0,0,1-.312-1.715l-.14.031c.14-.623.3-1.247.436-1.886,1.434-3.554,3.538-6.516,7.077-8.246.109-.047.218-.078.327-.125l-.234-.234c-.514-.031-1.029-.062-1.543-.109a12.007,12.007,0,0,0-1.808-.249q-24.924-.023-49.865.016a14.347,14.347,0,0,0-1.808.234h-2.213c-.016-.359-.031-.717-.031-1.076a8.981,8.981,0,0,1,1.278-.171q24.387,0,48.789.031h12.408c.717.016,1.45.016,2.167.031.171.016.343.047.5.062,1.917.561,3.85,1.122,5.767,1.683.156.094.327.2.483.3C651.175,212.02,651.424,212.176,651.658,212.332Z" transform="translate(-473.399 -198.355)" fill="#1f4554"/>
    <path id="Path_20822" data-name="Path 20822" d="M617.324,209.853H611.65c1.387-.062,2.775-.125,4.162-.2C616.311,209.728,616.825,209.79,617.324,209.853Z" transform="translate(-455.463 -198.416)" fill="#728992"/>
    <path id="Path_20823" data-name="Path 20823" d="M638.61,255.227v0Z" transform="translate(-440.399 -173.351)" fill="#d7eaf0"/>
    <path id="Path_20824" data-name="Path 20824" d="M524.93,276.05c.125.187.265.359.39.546C525.195,276.409,525.055,276.237,524.93,276.05Z" transform="translate(-503.918 -161.315)" fill="#728992"/>
    <path id="Path_20825" data-name="Path 20825" d="M619.772,209.78h0Z" transform="translate(-451.177 -198.344)" fill="#728992"/>
    <path id="Path_20826" data-name="Path 20826" d="M621.509,209.862c-.171-.016-.343-.047-.5-.062A4.838,4.838,0,0,0,621.509,209.862Z" transform="translate(-450.233 -198.333)" fill="#728992"/>
    <path id="Path_20827" data-name="Path 20827" d="M525.6,276.78a.2.2,0,0,1,.094.3C525.548,277,525.517,276.9,525.6,276.78Z" transform="translate(-503.57 -160.907)" fill="#728992"/>
    <path id="Path_20828" data-name="Path 20828" d="M525.67,277.49c.031.171.062.359.094.53C525.732,277.833,525.7,277.661,525.67,277.49Z" transform="translate(-503.505 -160.51)" fill="#728992"/>
    <path id="Path_20829" data-name="Path 20829" d="M625.513,211.216c-.156-.094-.327-.2-.483-.3C625.2,211.014,625.357,211.123,625.513,211.216Z" transform="translate(-447.986 -197.707)" fill="#d7eaf0"/>
    <path id="Path_20830" data-name="Path 20830" d="M597.146,209.87c.016.358.031.717.031,1.076a12.833,12.833,0,0,0-9.742,5.674,11.2,11.2,0,0,0-2.323,8.215c0,.281-.016.577-.016.857-.047,3.476-.14,6.936-.125,10.413,0,4.458.094,8.932.14,13.39,0,.249.016.514.016.764q0,11.059-.016,22.119V273.5c-.047,2.541,0,5.082-.171,7.622-.125,1.917.624,2.447,2.478,2.432,9.134-.078,18.269-.031,27.4-.031,9.883,0,19.765.016,29.648-.047.748,0,1.5-.655,2.245-1.013.016-.171.016-.327.031-.5V280.84c0-2.993,0-6-.016-8.994.405.062.795.125,1.2.171.031.608.062,1.216.094,1.839v5.6c-.359,1.793.624,3.959-1.512,5.237-.249.016-.5.047-.748.062-.265,0-.514.016-.779.016-8.526-.016-17.068-.047-25.595-.047q-15.782,0-31.565.047h-1.138c-.5-.031-.982-.047-1.481-.078-.452-.452-.92-.889-1.372-1.341-.031-.686-.078-1.372-.078-2.042V224.85a4.89,4.89,0,0,0-.779-.171c-10.147,0-20.3-.016-30.443.016-2.369,0-3.211.92-3.211,3.336q0,31.541-.016,63.1v2H683.735a14.888,14.888,0,0,0,1.652-.187l.047.062c-.031.468-.047.951-.062,1.418H549.542c-.094.234-.187.343-.187.452-.016,2-.031,3.975-.016,5.97.016,3.211.639,3.85,3.8,3.85q22.493,0,45,.016c1.793,0,3.6.078,5.393.109.078.359.156.733.234,1.091-4.863.016-9.711.047-14.574.062q-18.214.023-36.444,0c-3.32,0-4.723-1.325-4.739-4.614q-.023-36.709,0-73.4c0-3.118,1.465-4.5,4.614-4.52q14.473-.023,28.962,0h1.964C584.879,215.637,588.931,210.634,597.146,209.87Z" transform="translate(-491.026 -198.294)" fill="#32505a"/>
    <path id="Path_20831" data-name="Path 20831" d="M551.073,218.4c-1.4-1.637-1.216-4.209,0-4.972Z" transform="translate(-489.86 -196.304)" fill="#32505a"/>
    <path id="Path_20832" data-name="Path 20832" d="M545.231,222.2c-.826-.374-1.559-.7-2.291-1.044a9.571,9.571,0,0,1,2.323-.514,14.238,14.238,0,0,1,2.6.592C547.024,221.56,546.182,221.856,545.231,222.2Z" transform="translate(-493.855 -192.276)" fill="#32505a"/>
    <path id="Path_20833" data-name="Path 20833" d="M548.715,219.211c-1.263-1.122-2.463-2.213-3.835-3.429A4.042,4.042,0,0,1,548.715,219.211Z" transform="translate(-492.771 -194.993)" fill="#32505a"/>
    <path id="Path_20834" data-name="Path 20834" d="M612.39,219.613a14.443,14.443,0,0,1,2.135-.327c10.241-.016,20.5,0,30.739-.047a6.341,6.341,0,0,0,1.87-.639h1.512c.016.577.031,1.169.047,1.746l-.047.047a6.563,6.563,0,0,0-1.917-.624c-4.224-.031-8.433.031-12.657.062H615.757l-2.307.047C613.123,219.785,612.764,219.707,612.39,219.613Z" transform="translate(-455.049 -193.416)" fill="#32505a"/>
    <path id="Path_20835" data-name="Path 20835" d="M637.474,219.147l-.374-.327C637.209,218.929,637.349,219.038,637.474,219.147Z" transform="translate(-441.242 -193.293)" fill="#32505a"/>
    <path id="Path_20836" data-name="Path 20836" d="M592.108,272.707c6.032.249,12.065.5,18.284.764.873,4.177.078,8.791,3.476,12.642-1.559.062-2.7.125-3.819.171q-12.462-.047-24.924-.078H582.49c3.227-4.193,2.666-9.041,3.32-13.624,1.153-.016,2.307-.047,3.445-.062C590.206,272.567,591.157,272.645,592.108,272.707Zm-4.894,10.475h21.7C607.835,281.81,588.569,281.748,587.213,283.182Z" transform="translate(-471.756 -163.287)" fill="#fefefe"/>
    <path id="Path_20837" data-name="Path 20837" d="M525.6,278.472c-.2-3.772-.405-7.544-.624-11.472h19.905c-.359,3.835-.7,7.638-1.06,11.441-.016.14-.031.3-.047.436-.109.592-.218,1.185-.39,2.026H533.023c-1.356,0-2.712.016-4.068.016-.171,0-.343,0-.53.016-1-.14-2.291.312-2.51-1.309C525.822,279.252,525.713,278.862,525.6,278.472Z" transform="translate(-503.89 -166.372)" fill="#fefefe"/>
    <path id="Path_20838" data-name="Path 20838" d="M669.011,274.834c.592,4.972-4.022,9.929-9.649,10.366a10.651,10.651,0,0,1-11.192-10.662c.39.327.686.546.951.811,1.543,1.465,2.868,1.5,4.3-.156,1.185-1.356,2.026-1.216,3.133.094,1.372,1.606,2.915,1.543,4.209-.094.889-1.138,1.871-.842,2.759-.3C666.345,276.58,666.688,276.611,669.011,274.834Z" transform="translate(-435.057 -162.328)" fill="#fefefe"/>
    <path id="Path_20839" data-name="Path 20839" d="M525.613,268.4c-.234-2.182-.468-4.318-.733-6.765,6.656.3,13.2.592,19.952.9-.187,2.011-.374,3.9-.561,5.877C538.02,268.4,531.894,268.4,525.613,268.4Z" transform="translate(-503.946 -169.372)" fill="#fefefe"/>
    <path id="Path_20840" data-name="Path 20840" d="M664.747,276.624c-2.042-1.73-2.962-1.761-4.739.078-1,1.029-1.793,1.06-2.806.016-1.652-1.73-2.1-1.528-4.349-.53a5.089,5.089,0,0,1-3.725-.249c-1.356-.624-.764-1.98-.265-3.071a4.582,4.582,0,0,1,4.785-3.055c3.6.156,7.217.016,10.818.047,2.213.031,4.723,3.632,4.006,5.705-.047.14-.405.187-.624.281C666.945,274.847,665.807,275.144,664.747,276.624Z" transform="translate(-434.987 -164.804)" fill="#fefefe"/>
    <path id="Path_20841" data-name="Path 20841" d="M541.554,277.754c-.2,2.026-.374,3.85-.561,5.814H527.136c-.218-2.042-.436-4.177-.686-6.578C531.547,277.239,536.473,277.489,541.554,277.754Z" transform="translate(-503.069 -160.79)" fill="#fefefe"/>
    <path id="Path_20842" data-name="Path 20842" d="M547,261.59H523.95c.327-3.18.327-3.18,3.258-3.18H543.45C546.443,258.41,546.443,258.426,547,261.59Z" transform="translate(-504.466 -171.171)" fill="#d7eaf0"/>
    <path id="Path_20843" data-name="Path 20843" d="M630.362,282.729H615.491c0-.717.016-1.372,0-2.026-.047-1.263.452-2.011,1.808-2.011,3.523-.016,7.046-.171,10.568-.031,2.51.109,2.6.39,2.556,2.977A7.405,7.405,0,0,1,630.362,282.729Z" transform="translate(-453.318 -159.889)" fill="#fefefe"/>
    <path id="Path_20844" data-name="Path 20844" d="M655.683,261.77a11.886,11.886,0,0,1,1.45,10.506,1.68,1.68,0,0,1-1.309.842c-.561,0-1.481-.327-1.606-.717A11.95,11.95,0,0,1,655.683,261.77Z" transform="translate(-432.033 -169.294)" fill="#d7eaf0"/>
    <path id="Path_20845" data-name="Path 20845" d="M525.8,258.169c-.14-1.231.343-1.715,1.574-1.7,4.739.047,9.462.031,14.2,0,1.169-.016,1.574.5,1.465,1.715Q534.434,258.161,525.8,258.169Z" transform="translate(-503.446 -172.256)" fill="#d7eaf0"/>
    <path id="Path_20846" data-name="Path 20846" d="M654.753,270.483c-3.679.873-4.63-.9-4.521-4.193A4.457,4.457,0,0,1,654.753,270.483Z" transform="translate(-433.909 -166.768)" fill="#d7eaf0"/>
    <path id="Path_20847" data-name="Path 20847" d="M656.77,270.436a4.21,4.21,0,0,1,4.38-4.146C661.555,269.8,660.246,271.044,656.77,270.436Z" transform="translate(-430.252 -166.768)" fill="#d7eaf0"/>
    <path id="Path_20848" data-name="Path 20848" d="M651.741,263.77c2.213.842,2.291,1.013,1.73,3.757C651.211,266.763,650.852,265.983,651.741,263.77Z" transform="translate(-433.312 -168.177)" fill="#d7eaf0"/>
    <path id="Path_20849" data-name="Path 20849" d="M659.141,263.72c.421,2.884.39,2.93-1.855,3.9C656.662,264.889,656.772,264.64,659.141,263.72Z" transform="translate(-430.144 -168.204)" fill="#d7eaf0"/>
    <path id="Path_20850" data-name="Path 20850" d="M658.85,274.669c1.06-1.5,2.2-1.777,3.117-.764l.016-.016c-.327.078-.655.156-.966.234.187.156.374.327.546.483-.53.468-1.044.935-1.715,1.512C659.458,275.557,659.146,275.105,658.85,274.669Z" transform="translate(-429.089 -162.849)" fill="#d7eaf0"/>
    <path id="Path_20851" data-name="Path 20851" d="M530.15,275.93h0Z" transform="translate(-501.001 -161.382)" fill="#728992"/>
    <path id="Path_20852" data-name="Path 20852" d="M660.786,274.4c-.187-.156-.374-.327-.546-.483.327-.078.655-.156.966-.234C661.066,273.929,660.926,274.163,660.786,274.4Z" transform="translate(-428.313 -162.639)" fill="#fefefe"/>
    <path id="Path_20853" data-name="Path 20853" d="M525.38,274.36c.109.39.218.764.327,1.153C525.6,275.139,525.489,274.75,525.38,274.36Z" transform="translate(-503.667 -162.259)" fill="#728992"/>
    <path id="Path_20854" data-name="Path 20854" d="M537.04,274.786c.016-.14.031-.3.047-.436C537.071,274.49,537.056,274.631,537.04,274.786Z" transform="translate(-497.152 -162.265)" fill="#728992"/>
    <path id="Path_20855" data-name="Path 20855" d="M527.2,275.946c.171,0,.343,0,.53-.016C527.543,275.946,527.371,275.946,527.2,275.946Z" transform="translate(-502.65 -161.382)" fill="#728992"/>
    <path id="Path_20856" data-name="Path 20856" d="M603.05,274.477c-1.793-.047-3.6-.109-5.393-.109q-22.493-.023-45-.016c-3.164,0-3.788-.639-3.8-3.85-.016-2,0-3.975.016-5.97,0-.109.094-.218.187-.452h135.83c.016,2.494.078,4.972.047,7.451-.031,1.824-.92,2.7-2.759,2.821-.561.047-1.122.016-1.683.016q-37.808,0-75.6.016C604.3,274.4,603.674,274.446,603.05,274.477Zm16.055-4.863v-.826c-.7-.5-1.372-1.309-2.135-1.434a1.667,1.667,0,0,0-1.98,1.855,1.7,1.7,0,0,0,2,1.871C617.749,270.954,618.4,270.128,619.106,269.614Z" transform="translate(-490.555 -168.003)" fill="#fefefe"/>
    <path id="Path_20857" data-name="Path 20857" d="M635.944,219.95c1.325.3,1.06,1.341,1.06,2.245q.023,15.853,0,31.69c0,10.444.016,20.887-.031,31.331a7.759,7.759,0,0,1-.639,2.1l-.047-.062q.023-32.64.016-65.265a11.108,11.108,0,0,0-.39-1.98C635.882,220.012,635.944,219.95,635.944,219.95Z" transform="translate(-441.91 -192.661)" fill="#32505a"/>
    <path id="Path_20858" data-name="Path 20858" d="M589.682,272.713c-.951-.062-1.9-.125-2.853-.2C587.781,272.572,588.732,272.65,589.682,272.713Z" transform="translate(-469.331 -163.293)" fill="#32505a"/>
    <path id="Path_20859" data-name="Path 20859" d="M635.707,219.71l.374.374-.047.047-.281-.047a1.136,1.136,0,0,0-.094-.327Z" transform="translate(-442.047 -192.795)" fill="#32505a"/>
    <path id="Path_20860" data-name="Path 20860" d="M574.138,216.239a12.833,12.833,0,0,1,9.742-5.674h2.213c.748.047,1.481.109,2.229.109h47.355c1.294,0,2.6-.078,3.9-.125.514.031,1.029.062,1.543.109a1.347,1.347,0,0,0-.094.358c-3.538,1.746-5.643,4.707-7.077,8.246-2.011.2-.779,1.138-.437,1.886l.14-.031c-.078.249-.156.5-.234.733-1.465.125-.935,1.247-.935,2q-.047,27.917-.016,55.835c0,2.806-.265,3.071-3.1,3.071-16.757,0-33.513.031-50.254-.031-2.354,0-4.692-.374-6.874-.561-.156-3.32-.3-6.188-.437-9.072v-1.122c.281-.452.764-.889.811-1.356.062-.779-.249-1.574-.249-2.369.078-5.612.218-11.239.249-16.85,0-.514-.514-1.029-.795-1.543,0-.249-.016-.514-.016-.764.047-4.77.14-9.555.14-14.325,0-3.164-.094-6.313-.14-9.477,0-.281.016-.577.016-.857.608-2.042,1.216-4.084,1.808-6.142C573.826,217.627,573.967,216.941,574.138,216.239Zm3.086,57.5a7.364,7.364,0,0,0,1.528.764,8.759,8.759,0,0,0,1.808,0h10.054c0-4.3-.062-8.635.031-12.969.031-1.621-.545-2.1-2.042-1.917-2.229.281-4.474.514-6.718.748-1.606.171-2.4-.764-3.133-2.26h9.555c3.881,0,4.022-.14,3.741-3.975,0-.094-.14-.187-.234-.312-.358.078-.733.156-1.528.312,1.122-2.4-1.029-5.1,1.434-6.843-.343-.405-1-.857-.966-1.231.047-.39.748-.717,1.076-1-.795-.483-1.574-.935-2.572-1.528a3.063,3.063,0,0,1-1.154.374c-3.3.016-6.609.094-9.9-.109-1.418-.094-1.793.312-1.777,1.574.016,3.18,0,6.344.016,9.524,0,1.559-.452,3.273,1.34,3.975-.5,1.076-1.247,1.98-1.278,2.9-.14,3.538-.094,7.092-.031,10.646C576.461,272.854,576.959,273.306,577.225,273.742Zm33.186-26.811c4.536,0,9.088.031,13.623-.031a4.8,4.8,0,0,0,1.652-.67c-.53-.265-1.044-.764-1.574-.764q-13.725-.07-27.45,0c-.514,0-1.044.5-1.559.764a4.925,4.925,0,0,0,1.652.67C601.323,246.963,605.874,246.931,610.41,246.931Zm-.094-14.185c4.536,0,9.088.031,13.624-.031a5.194,5.194,0,0,0,1.746-.764,5.325,5.325,0,0,0-1.652-.686q-13.631-.07-27.263,0a4.667,4.667,0,0,0-1.652.686c.577.265,1.169.764,1.746.764C601.354,232.778,605.843,232.747,610.317,232.747Zm.094,31.721c-4.661,0-9.321-.016-13.982.031-.437,0-.873.421-1.309.655.437.281.889.795,1.325.811q13.888.07,27.761,0c.483,0,.966-.514,1.434-.795-.483-.218-.966-.639-1.465-.655C619.607,264.452,615.009,264.467,610.41,264.467Zm15.525-15.525c-1.387-1.263-29.741-1.231-30.972,0Zm-30.77-19.064h30.5C624.642,228.819,597.13,228.538,595.166,229.879Zm.016,32.578c1.574,1.278,29.164,1.122,30.38,0Zm-4.583-28.1c0-1.871.031-3.725-.016-5.6a2.348,2.348,0,0,0-2.775-1.793,8.987,8.987,0,0,1-2.463.5c-2.478.062-4.972.062-7.466.016-1.138-.031-1.512.405-1.5,1.528.047,3.476.047,6.968,0,10.444-.016,1.122.359,1.543,1.5,1.543,3.6.016,7.2.109,10.787.14,1.372.016,2.12-.53,1.964-2.135A46.2,46.2,0,0,1,590.6,234.352Zm12.049,17.442c2.12,0,4.224.047,6.344-.031.468-.016.92-.5,1.372-.764-.421-.234-.842-.67-1.278-.686-4.224-.047-8.464-.047-12.688,0-.436,0-.857.436-1.278.67.452.265.9.748,1.372.764C598.548,251.841,600.606,251.795,602.648,251.795Zm7.84-17.287c-1.372-.951-14.107-.951-15.323-.094C596.21,235.163,608.556,235.3,610.488,234.508ZM595.181,267.32c1.761,1.372,14.216,1.107,15.12,0ZM591.814,243.8c.047-.094.14-.218.109-.3s-.187-.094-.281-.14c-.047.094-.14.218-.109.3C591.565,243.72,591.721,243.752,591.814,243.8Z" transform="translate(-477.729 -197.914)" fill="#fefefe"/>
    <path id="Path_20861" data-name="Path 20861" d="M611.34,218.083c.078-.249.156-.5.234-.733a8.985,8.985,0,0,0,.312,1.715,7.653,7.653,0,0,0,.795,1.325c-.062.359-.109.7-.171,1.06-.031.047-.109.094-.094.14a1.653,1.653,0,0,0,.109.3q0,22.75-.016,45.485c-.39.062-.779.109-1.153.171Q611.332,242.781,611.34,218.083Z" transform="translate(-455.636 -194.114)" fill="#32505a"/>
    <path id="Path_20862" data-name="Path 20862" d="M612.09,220.372c.062-.358.109-.7.171-1.06a.4.4,0,0,0,.3-.062c.358.078.717.156,1.075.249-.234.514-.686,1.029-.686,1.543.078,8.121.249,16.242.327,24.379.062,6.531.078,13.047-.047,19.578-.031,1.169.639,2.79-1.013,3.6-.031-.608-.062-1.216-.094-1.839-.016-.156-.016-.312-.031-.468q0-22.75.016-45.484C612.106,220.653,612.09,220.513,612.09,220.372Z" transform="translate(-455.217 -193.052)" fill="#d7eaf0"/>
    <path id="Path_20863" data-name="Path 20863" d="M634.451,210.654c-1.294.047-2.6.109-3.9.125q-23.685.023-47.355,0c-.748,0-1.481-.078-2.229-.109a14.348,14.348,0,0,1,1.808-.234q24.924-.023,49.865-.016A10.072,10.072,0,0,1,634.451,210.654Z" transform="translate(-472.605 -197.987)" fill="#69797e"/>
    <path id="Path_20864" data-name="Path 20864" d="M611.646,218.036c-.343-.748-1.574-1.683.437-1.886C611.943,216.789,611.787,217.413,611.646,218.036Z" transform="translate(-455.849 -194.785)" fill="#d7eaf0"/>
    <path id="Path_20865" data-name="Path 20865" d="M616.22,210.989a.77.77,0,0,1,.094-.359l.234.234C616.423,210.911,616.329,210.942,616.22,210.989Z" transform="translate(-452.909 -197.869)" fill="#69797e"/>
    <path id="Path_20866" data-name="Path 20866" d="M647.562,268.541c1.652-.811,1-2.432,1.013-3.6.14-6.516.109-13.047.047-19.578-.078-8.121-.249-16.242-.327-24.379,0-.514.452-1.029.686-1.543l2.307-.047H669.6c2.962.078,5.939.094,8.9.249,1.917.109,3.835.421,5.752.655l.281.047a9.876,9.876,0,0,1,.39,1.98q.023,32.64-.016,65.265a14.877,14.877,0,0,1-1.652.187H548.83v-2q0-31.541.016-63.1c0-2.416.842-3.32,3.211-3.336,10.148-.031,20.3-.016,30.443-.016a5.756,5.756,0,0,1,.779.171v56.458c0,.686.047,1.372.078,2.042.047.655.094,1.309.14,1.948.421-.2.826-.405,1.231-.608.5.031.982.062,1.481.078h1.138q15.782-.023,31.565-.047c8.526,0,17.068.031,25.595.047.125.171.265.327.39.5l.374-.514c.249-.016.5-.047.748-.062.5.265.982.53,1.278.686.421-.639.686-1.044.966-1.45.094.125.172.265.265.39a3.433,3.433,0,0,1-.265-.39,3.656,3.656,0,0,0,.109-1.076c-.234-1.154-.546-2.276-.826-3.414C647.562,272.282,647.562,270.412,647.562,268.541Z" transform="translate(-490.564 -193.009)" fill="#fefefe"/>
    <path id="Path_20867" data-name="Path 20867" d="M633.5,217.82v49.444l-.016.125c0,2.993,0,6,.016,8.994V277.5c-.016.171-.016.327-.031.5-.748.359-1.5,1.013-2.245,1.013-9.883.062-19.765.047-29.648.047-9.134,0-18.269-.047-27.4.031-1.839.016-2.6-.514-2.478-2.432.171-2.525.125-5.082.171-7.622.14,2.868.281,5.752.436,9.072,2.182.187,4.536.561,6.874.561q25.135.07,50.254.031c2.853,0,3.1-.265,3.1-3.071q0-27.917.016-55.835C632.564,219.067,632.034,217.929,633.5,217.82Z" transform="translate(-477.795 -193.851)" fill="#d7eaf0"/>
    <path id="Path_20868" data-name="Path 20868" d="M571.816,235.78c.281.514.811,1.029.795,1.543-.047,5.612-.187,11.239-.249,16.85-.016.795.312,1.59.249,2.369-.031.468-.514.9-.811,1.356Q571.8,246.839,571.816,235.78Z" transform="translate(-477.729 -183.816)" fill="#d7eaf0"/>
    <path id="Path_20869" data-name="Path 20869" d="M571.85,220.02c.047,3.164.156,6.313.14,9.477-.016,4.77-.094,9.555-.14,14.325-.047-4.458-.125-8.932-.14-13.39C571.71,226.956,571.8,223.48,571.85,220.02Z" transform="translate(-477.779 -192.622)" fill="#d7eaf0"/>
    <path id="Path_20870" data-name="Path 20870" d="M574.158,214.2c-.172.686-.312,1.387-.514,2.073-.592,2.042-1.2,4.1-1.808,6.142A11.147,11.147,0,0,1,574.158,214.2Z" transform="translate(-477.749 -195.874)" fill="#d7eaf0"/>
    <path id="Path_20871" data-name="Path 20871" d="M613.445,258.974c-.265.405-.53.811-.966,1.45-.3-.156-.779-.421-1.278-.686,2.12-1.278,1.138-3.46,1.512-5.237.281,1.138.592,2.26.826,3.414a3.583,3.583,0,0,1-.094,1.06Z" transform="translate(-455.714 -173.356)" fill="#d7eaf0"/>
    <path id="Path_20872" data-name="Path 20872" d="M572.362,258.341c-.421.2-.826.405-1.231.608-.047-.655-.094-1.309-.14-1.948C571.442,257.436,571.91,257.889,572.362,258.341Z" transform="translate(-478.182 -171.959)" fill="#d7eaf0"/>
    <path id="Path_20873" data-name="Path 20873" d="M573.958,257.91h0Z" transform="translate(-477.159 -171.451)" fill="#d7eaf0"/>
    <path id="Path_20874" data-name="Path 20874" d="M610.994,257.9l-.374.514c-.125-.171-.265-.327-.39-.5C610.479,257.916,610.744,257.9,610.994,257.9Z" transform="translate(-456.256 -171.456)" fill="#d7eaf0"/>
    <path id="Path_20875" data-name="Path 20875" d="M611.34,249.716l.016-.125c.39-.062.764-.109,1.153-.171.016.156.016.312.031.468C612.135,249.841,611.73,249.779,611.34,249.716Z" transform="translate(-455.636 -176.195)" fill="#728992"/>
    <path id="Path_20876" data-name="Path 20876" d="M611.32,256.609c.016-.171.016-.327.031-.5C611.351,256.281,611.336,256.453,611.32,256.609Z" transform="translate(-455.647 -172.457)" fill="#728992"/>
    <path id="Path_20877" data-name="Path 20877" d="M611.35,255.967v0Z" transform="translate(-455.63 -172.859)" fill="#728992"/>
    <path id="Path_20878" data-name="Path 20878" d="M640.972,220.309c-1.917-.218-3.835-.546-5.752-.655-2.962-.156-5.939-.171-8.9-.249,4.224-.031,8.433-.094,12.657-.062a6.564,6.564,0,0,1,1.917.624A2.194,2.194,0,0,1,640.972,220.309Z" transform="translate(-447.266 -193.005)" fill="#d7eaf0"/>
    <path id="Path_20879" data-name="Path 20879" d="M616.025,219.38h0Z" transform="translate(-453.837 -192.98)" fill="#d7eaf0"/>
    <path id="Path_20880" data-name="Path 20880" d="M585.52,279.735c1.356-1.419,20.622-1.372,21.7,0Z" transform="translate(-470.063 -159.841)" fill="#32505a"/>
    <path id="Path_20881" data-name="Path 20881" d="M595.4,268.45c-.7.514-1.356,1.356-2.12,1.465a1.707,1.707,0,0,1-2-1.871,1.667,1.667,0,0,1,1.98-1.855c.764.125,1.434.935,2.135,1.434Z" transform="translate(-466.845 -166.84)" fill="#32505a"/>
    <path id="Path_20882" data-name="Path 20882" d="M575.584,261.934c-.265-.452-.764-.888-.764-1.341-.062-3.554-.125-7.092.031-10.646.031-.92.779-1.824,1.278-2.9-1.808-.7-1.341-2.416-1.341-3.975,0-3.18.016-6.344-.016-9.524-.016-1.263.374-1.652,1.777-1.574,3.289.2,6.594.125,9.9.109a3.063,3.063,0,0,0,1.154-.374c1,.592,1.777,1.06,2.572,1.528-.327.281-1.044.608-1.076,1-.031.374.624.826.966,1.231-2.463,1.746-.3,4.442-1.434,6.843.795-.156,1.169-.234,1.528-.312.094.125.218.218.234.312.281,3.835.156,3.975-3.741,3.975H577.1c.733,1.5,1.543,2.432,3.133,2.26,2.245-.234,4.474-.468,6.718-.748,1.5-.187,2.089.3,2.042,1.917-.109,4.333-.031,8.667-.031,12.969H578.9a8.759,8.759,0,0,1-1.808,0,6.818,6.818,0,0,1-1.512-.748c3.725.031,7.466.031,11.207.094,1.153.016,1.512-.468,1.512-1.559-.031-3.242-.031-6.469.016-9.711.016-1.154-.421-1.512-1.543-1.5q-4.863.07-9.711,0c-1.076-.016-1.574.281-1.543,1.465C575.584,254.452,575.569,258.193,575.584,261.934Zm12.7-22.773h0c-.016-1.683-.062-3.367,0-5.035.047-1.044-.39-1.5-1.387-1.5-3.367,0-6.734-.062-10.085.047a1.893,1.893,0,0,0-1.247,1.356c-.109,3.351-.031,6.718-.062,10.085,0,1.029.421,1.418,1.465,1.4,3.242-.047,6.469-.062,9.711,0,1.263.016,1.637-.53,1.606-1.683C588.257,242.278,588.288,240.72,588.288,239.161Z" transform="translate(-476.089 -186.09)" fill="#d7eaf0"/>
    <path id="Path_20883" data-name="Path 20883" d="M602.046,234.428c-4.536,0-9.088.031-13.624-.031a4.8,4.8,0,0,1-1.652-.67c.514-.265,1.044-.764,1.559-.764q13.725-.07,27.45,0c.53,0,1.044.5,1.574.764a4.925,4.925,0,0,1-1.652.67C611.133,234.459,606.6,234.428,602.046,234.428Z" transform="translate(-469.365 -185.41)" fill="#d7eaf0"/>
    <path id="Path_20884" data-name="Path 20884" d="M601.952,225.333c-4.474,0-8.963.031-13.436-.031a5.194,5.194,0,0,1-1.746-.764,5.325,5.325,0,0,1,1.652-.686q13.631-.07,27.263,0a4.553,4.553,0,0,1,1.652.686c-.577.265-1.169.764-1.746.764C611.04,225.365,606.488,225.333,601.952,225.333Z" transform="translate(-469.365 -190.5)" fill="#d7eaf0"/>
    <path id="Path_20885" data-name="Path 20885" d="M602.04,245.141c4.6,0,9.2-.016,13.795.031.483,0,.982.421,1.465.655-.483.281-.951.795-1.434.795q-13.889.07-27.761,0c-.452,0-.889-.53-1.325-.811.437-.218.873-.639,1.309-.655C592.719,245.126,597.38,245.141,602.04,245.141Z" transform="translate(-469.359 -178.588)" fill="#d7eaf0"/>
    <path id="Path_20886" data-name="Path 20886" d="M617.633,235.515H586.66C587.891,234.284,616.23,234.253,617.633,235.515Z" transform="translate(-469.426 -184.487)" fill="#d7eaf0"/>
    <path id="Path_20887" data-name="Path 20887" d="M586.79,223.276c1.948-1.356,29.476-1.06,30.5,0Z" transform="translate(-469.353 -191.311)" fill="#d7eaf0"/>
    <path id="Path_20888" data-name="Path 20888" d="M586.8,243.85h30.38C615.964,244.972,588.39,245.128,586.8,243.85Z" transform="translate(-469.348 -179.307)" fill="#d7eaf0"/>
    <path id="Path_20889" data-name="Path 20889" d="M588.956,228.488a46.432,46.432,0,0,0,.031,4.661c.171,1.605-.577,2.135-1.964,2.135-3.6-.031-7.2-.125-10.787-.14-1.138,0-1.512-.421-1.5-1.543.062-3.476.062-6.968,0-10.444-.016-1.122.358-1.559,1.5-1.528,2.478.047,4.972.062,7.466-.016a8.988,8.988,0,0,0,2.463-.5c1.076-.343,2.759.655,2.775,1.793C588.987,224.746,588.956,226.617,588.956,228.488Zm-.686.062c0-1.559-.062-3.1.016-4.645.078-1.341-.405-1.917-1.793-1.886-3.164.062-6.329.047-9.493,0-1.122-.016-1.528.374-1.5,1.512.062,3.227.047,6.453,0,9.68-.016,1.076.312,1.621,1.465,1.606,3.289-.016,6.578,0,9.867.016,1.013.016,1.481-.405,1.45-1.434C588.255,231.776,588.27,230.155,588.27,228.55Z" transform="translate(-476.087 -192.049)" fill="#d7eaf0"/>
    <path id="Path_20890" data-name="Path 20890" d="M594.289,237.553c-2.058,0-4.115.047-6.157-.047-.468-.016-.92-.5-1.372-.764.421-.234.857-.67,1.278-.67,4.224-.047,8.464-.047,12.688,0,.421,0,.857.436,1.278.686-.452.265-.9.748-1.372.764C598.529,237.6,596.409,237.553,594.289,237.553Z" transform="translate(-469.37 -183.672)" fill="#d7eaf0"/>
    <path id="Path_20891" data-name="Path 20891" d="M602.113,226.18c-1.933.795-14.263.655-15.323-.094C587.99,225.229,600.741,225.229,602.113,226.18Z" transform="translate(-469.353 -189.585)" fill="#d7eaf0"/>
    <path id="Path_20892" data-name="Path 20892" d="M586.8,246.97h15.12C601.016,248.061,588.546,248.342,586.8,246.97Z" transform="translate(-469.348 -177.564)" fill="#d7eaf0"/>
    <path id="Path_20893" data-name="Path 20893" d="M584.743,232.036c-.094-.047-.249-.062-.281-.14s.062-.187.109-.3c.094.047.249.062.281.14C584.883,231.8,584.79,231.927,584.743,232.036Z" transform="translate(-470.658 -186.152)" fill="#d7eaf0"/>
    <path id="Path_20894" data-name="Path 20894" d="M612.124,219.97a4.075,4.075,0,0,0,.016.436,1.14,1.14,0,0,1-.109-.3C612.015,220.064,612.093,220.017,612.124,219.97Z" transform="translate(-455.251 -192.65)" fill="#728992"/>
    <path id="Path_20895" data-name="Path 20895" d="M612.63,257.37a3.431,3.431,0,0,1,.265.39c-.078-.125-.172-.265-.265-.39Z" transform="translate(-454.915 -171.753)" fill="#d7eaf0"/>
    <path id="Path_20896" data-name="Path 20896" d="M575.308,255.643c-.016-3.741,0-7.466-.078-11.207-.031-1.185.468-1.481,1.543-1.465q4.863.07,9.711,0c1.122-.016,1.559.343,1.543,1.5-.047,3.242-.047,6.469-.016,9.711.016,1.091-.358,1.59-1.512,1.559C582.775,255.674,579.034,255.658,575.308,255.643Zm4.879-4.536.031.031.327.374-.078.078.062-.078c1.231.561,3.772-1.481,4.037-3.258.016-.265.031-.514.047-.779.109-.405.2-.811.312-1.216l-.421-.281c-1.06.748-2.12,1.481-3.383,2.369.5.156.779.249,1.06.327l-.9.982c-.966-.39-1.683-.686-2.4-.966.062.421.125.857.187,1.278.125.14.249.265.374.405l.047.031c.109.109.218.234.343.343l.031.031C579.954,250.873,580.078,250.982,580.187,251.107Z" transform="translate(-475.813 -179.799)" fill="#1ea5b3"/>
    <path id="Path_20897" data-name="Path 20897" d="M588.008,238.843c0,1.559-.031,3.118.016,4.661.031,1.153-.343,1.715-1.606,1.683-3.242-.047-6.469-.047-9.711,0-1.044.016-1.465-.374-1.465-1.4.016-3.367-.047-6.718.062-10.085a1.893,1.893,0,0,1,1.247-1.356c3.351-.109,6.718-.047,10.085-.047,1,0,1.434.452,1.387,1.5-.078,1.683-.016,3.367-.016,5.05Zm-8.168,1.341.047.062c.2.156.405.327.608.483h0c.343.234.857.717.982.639a14.209,14.209,0,0,0,3.273-2.525c.514-.623.343-1.808.5-2.977-.982.171-2.167.078-2.385.483-.764,1.45-1.964,1.5-3.258,1.512-.218,0-.421-.016-.639-.016-.109-.218-.234-.421-.436-.811-.546,2.494-.468,2.7.935,2.759l.094.109Z" transform="translate(-475.808 -185.773)" fill="#1ea5b3"/>
    <path id="Path_20898" data-name="Path 20898" d="M588,228.207c0,1.605-.031,3.227.016,4.832.031,1.044-.436,1.45-1.45,1.434-3.289-.031-6.578-.047-9.867-.016-1.153,0-1.481-.53-1.465-1.606.047-3.227.062-6.453,0-9.68-.016-1.138.374-1.528,1.5-1.512,3.164.047,6.329.062,9.493,0,1.387-.031,1.87.546,1.793,1.886C587.934,225.105,588,226.648,588,228.207Zm-3.429-2.073c.047-.312.078-.624.125-.92-.437.109-.873.187-1.294.312-.592.171-1.153.39-1.746.592l-.374-.468V228.1c-.733-.249-1.481-.483-2.728-.9.218,1.668,1.45,2.338,2.463,3.242.577-.483,1.076-.92,1.574-1.356,1.153-.281,2.354-.5,2.011-2.151C584.6,226.664,584.583,226.4,584.567,226.134Z" transform="translate(-475.813 -191.706)" fill="#1ea5b3"/>
    <path id="Path_20899" data-name="Path 20899" d="M583.312,245.85c-.016.265-.031.514-.047.779-1.34,1.091-2.7,2.167-4.037,3.258l-.062.078.078-.078-.327-.374-.031-.031c-.109-.109-.218-.234-.343-.343l-.031-.031c-.109-.109-.218-.234-.343-.343l-.047-.031c-.125-.125-.249-.265-.374-.405-.062-.421-.125-.857-.187-1.278.717.3,1.434.577,2.4.966l.9-.982C581.691,246.661,582.5,246.255,583.312,245.85Z" transform="translate(-474.511 -178.189)" fill="#d7eaf0"/>
    <path id="Path_20900" data-name="Path 20900" d="M582.5,246.386c-.811.405-1.621.811-2.432,1.2-.281-.094-.546-.171-1.06-.327,1.263-.873,2.323-1.621,3.382-2.369l.421.281C582.7,245.591,582.611,245.981,582.5,246.386Z" transform="translate(-473.7 -178.726)" fill="#50aab7"/>
    <path id="Path_20901" data-name="Path 20901" d="M578.64,249.608c1.341-1.091,2.7-2.167,4.037-3.258C582.412,248.127,579.871,250.169,578.64,249.608Z" transform="translate(-473.907 -177.91)" fill="#50aab7"/>
    <path id="Path_20902" data-name="Path 20902" d="M577.96,247.72c.109.109.218.234.343.343C578.178,247.954,578.069,247.829,577.96,247.72Z" transform="translate(-474.287 -177.145)" fill="#50aab7"/>
    <path id="Path_20903" data-name="Path 20903" d="M578.43,248.2l.327.374Z" transform="translate(-474.025 -176.876)" fill="#50aab7"/>
    <path id="Path_20904" data-name="Path 20904" d="M578.19,247.96c.109.109.218.234.343.343C578.424,248.194,578.3,248.085,578.19,247.96Z" transform="translate(-474.159 -177.01)" fill="#50aab7"/>
    <path id="Path_20905" data-name="Path 20905" d="M577.69,247.45c.125.14.249.265.374.405C577.939,247.715,577.815,247.575,577.69,247.45Z" transform="translate(-474.438 -177.295)" fill="#50aab7"/>
    <path id="Path_20906" data-name="Path 20906" d="M577.63,236.3c.218,0,.421.016.639.016.39.53.795,1.076,1.138,1.543,1.372-1.107,2.4-1.964,3.445-2.806.156.2.327.405.483.623-1.325,1.247-1.98,3.211-4.177,3.507h0c-.2-.156-.405-.327-.608-.483,0,0-.047-.062-.062-.062-.094-.094-.187-.187-.281-.3l-.094-.109C577.957,237.591,577.8,236.952,577.63,236.3Z" transform="translate(-474.472 -184.224)" fill="#d7eaf0"/>
    <path id="Path_20907" data-name="Path 20907" d="M578.929,239.443c2.2-.3,2.853-2.26,4.177-3.507-.156-.2-.327-.405-.483-.623-1.044.842-2.073,1.7-3.445,2.806-.343-.468-.748-1.013-1.138-1.543,1.309-.031,2.51-.062,3.258-1.512.218-.405,1.4-.312,2.385-.483-.171,1.154,0,2.338-.5,2.977a13.882,13.882,0,0,1-3.273,2.525C579.786,240.16,579.256,239.662,578.929,239.443Z" transform="translate(-474.242 -184.487)" fill="#50aab7"/>
    <path id="Path_20908" data-name="Path 20908" d="M577.9,236.141c.156.655.327,1.294.483,1.948-1.4-.062-1.481-.265-.935-2.759C577.671,235.72,577.8,235.922,577.9,236.141Z" transform="translate(-474.746 -184.068)" fill="#50aab7"/>
    <path id="Path_20909" data-name="Path 20909" d="M578.22,237.39c.2.156.405.327.608.483C578.625,237.717,578.423,237.546,578.22,237.39Z" transform="translate(-474.142 -182.917)" fill="#50aab7"/>
    <path id="Path_20910" data-name="Path 20910" d="M578.01,237.17c.094.094.187.187.281.3C578.2,237.357,578.1,237.264,578.01,237.17Z" transform="translate(-474.259 -183.039)" fill="#50aab7"/>
    <path id="Path_20911" data-name="Path 20911" d="M581.407,227.47c-.5.436-1.013.873-1.574,1.356-1-.92-2.245-1.574-2.463-3.242,1.247.405,1.98.655,2.728.9.561-.421,1.091-.9,1.683-1.263a11.3,11.3,0,0,1,1.605-.686c.016.265.031.53.047.779C582.748,226.036,582.078,226.753,581.407,227.47Z" transform="translate(-474.617 -190.097)" fill="#d7eaf0"/>
    <path id="Path_20912" data-name="Path 20912" d="M582.4,224.865a12.118,12.118,0,0,0-1.606.686c-.592.359-1.122.842-1.684,1.263v-2.447l.374.468c.577-.2,1.154-.405,1.746-.592.421-.125.857-.2,1.294-.312C582.477,224.257,582.446,224.569,582.4,224.865Z" transform="translate(-473.645 -190.437)" fill="#50aab7"/>
    <path id="Path_20913" data-name="Path 20913" d="M579.96,227.191l2.011-2.151C582.314,226.692,581.114,226.911,579.96,227.191Z" transform="translate(-473.17 -189.817)" fill="#50aab7"/>
  </g>
</g>
</svg>
`;
const plusIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="12.261" height="12.261" viewBox="0 0 12.261 12.261">
<g id="ios-add-circle-outline" transform="translate(-3.375 -3.375)">
  <path id="Path_20806" data-name="Path 20806" d="M16.318,13.179h-2.2v-2.2a.472.472,0,0,0-.943,0v2.2h-2.2a.452.452,0,0,0-.472.472.456.456,0,0,0,.472.472h2.2v2.2a.457.457,0,0,0,.472.472.469.469,0,0,0,.472-.472v-2.2h2.2a.472.472,0,0,0,0-.943Z" transform="translate(-4.145 -4.145)"/>
  <path id="Path_20807" data-name="Path 20807" d="M9.506,4.2A5.3,5.3,0,1,1,5.753,5.753,5.272,5.272,0,0,1,9.506,4.2m0-.825a6.131,6.131,0,1,0,6.131,6.131A6.13,6.13,0,0,0,9.506,3.375Z"/>
</g>
</svg>
`;

export const AddScreen = ({ navigation, route }) => {
  const setPackage =
    route.params && route.params.setPackage ? route.params.setPackage : null;

  const [TotalFeature, setTotalFeature] = React.useState([uuid.v4()]);
  const [Feature3, setFeature3] = React.useState();
  const [Feature1, setFeature1] = React.useState();
  const [Feature2, setFeature2] = React.useState();
  const [Feature4, setFeature4] = React.useState();
  const [Feature5, setFeature5] = React.useState();
  const [Feature6, setFeature6] = React.useState();
  const [Feature7, setFeature7] = React.useState();
  const [Feature8, setFeature8] = React.useState();
  const [Feature9, setFeature9] = React.useState();
  const [Feature10, setFeature10] = React.useState();
  const [Check1, setCheck1] = React.useState(true);
  const [Check2, setCheck2] = React.useState(true);
  const [Check3, setCheck3] = React.useState(true);
  const [Check4, setCheck4] = React.useState(true);
  const [Check5, setCheck5] = React.useState(true);
  const [Check6, setCheck6] = React.useState(true);
  const [Check7, setCheck7] = React.useState(true);
  const [Check8, setCheck8] = React.useState(true);
  const [Check9, setCheck9] = React.useState(true);
  const [Check10, setCheck10] = React.useState(true);
  const [Name, setName] = React.useState();
  const [Price, setPrice] = React.useState();
  const [NameError, setNameError] = React.useState();
  const [PriceError, setPriceError] = React.useState();
  const dispatch = useDispatch();
  const [Feature1Error, setFeature1Error] = React.useState("");
  const [Feature2Error, setFeature2Error] = React.useState("");
  const [Feature3Error, setFeature3Error] = React.useState("");
  const [Feature4Error, setFeature4Error] = React.useState("");
  const [Feature5Error, setFeature5Error] = React.useState("");
  const [Feature6Error, setFeature6Error] = React.useState("");
  const [Feature7Error, setFeature7Error] = React.useState("");
  const [Feature8Error, setFeature8Error] = React.useState("");
  const [Feature9Error, setFeature9Error] = React.useState("");
  const [Feature10Error, setFeature10Error] = React.useState("");
  const [FeatureError, setFeatureError] = React.useState("");

  React.useEffect(() => {
    if (route.params.data) {
      const data = route.params.data;
      //console.log(data);
      setName(data.name);
      setPrice(data.price);
      setTotalFeature(data.features);
      data.features.map((doc, i) => {
        if (i == 0) {
          setCheck1(doc.isAvailable);
          setFeature1(doc.title);
        } else if (i == 1) {
          setCheck2(doc.isAvailable);
          setFeature2(doc.title);
        } else if (i == 2) {
          setCheck3(doc.isAvailable);
          setFeature3(doc.title);
        } else if (i == 3) {
          setCheck4(doc.isAvailable);
          setFeature4(doc.title);
        } else if (i == 4) {
          setCheck5(doc.isAvailable);
          setFeature5(doc.title);
        } else if (i == 5) {
          setCheck6(doc.isAvailable);
          setFeature6(doc.title);
        } else if (i == 6) {
          setCheck7(doc.isAvailable);
          setFeature7(doc.title);
        } else if (i == 7) {
          setCheck8(doc.isAvailable);
          setFeature8(doc.title);
        } else if (i == 8) {
          setCheck9(doc.isAvailable);
          setFeature9(doc.title);
        } else if (i == 9) {
          setCheck10(doc.isAvailable);
          setFeature10(doc.title);
        }
      });
    }
  }, []);
  const removeById = (position) => {
    //const arr = TotalFeature.filter((d) => d != id);
    let arr = [];
    TotalFeature.map((doc, i) => {
      if (i != position - 1) {
        arr.push(doc);
      }
    });
    setTotalFeature(arr);
    if (position == 1) {
      setFeature1("");
    } else if (position == 2) {
      setFeature2("");
    } else if (position == 3) {
      setFeature3("");
    } else if (position == 4) {
      setFeature4("");
    } else if (position == 5) {
      setFeature5("");
    } else if (position == 6) {
      setFeature6("");
    } else if (position == 7) {
      setFeature7("");
    } else if (position == 8) {
      setFeature8("");
    } else if (position == 9) {
      setFeature9("");
    } else if (position == 10) {
      setFeature10("");
    }
  };

  return (
    <KeyboardAvoidingView
      style={{ flex: 1 }}
      behavior={Platform.OS === "ios" ? "padding" : null}
      keyboardVerticalOffset={Platform.OS === "ios" ? 80 : 0}>
      <SafeAreaView style={{flex:1}}>
        <View
          style={{
            paddingHorizontal: 20,
            paddingVertical: 5,
          }}>
          <AntDesign
            onPress={() => {
              navigation.goBack();
            }}
            name="left"
            size={24}
            color="black"
          />
        </View>
        <ScrollView showsVerticalScrollIndicator={false}>
          <View
            style={{
              flexDirection: "row",
              paddingHorizontal: 20,
              marginTop: 0,
            }}>
            <View
              style={{
                flex: 1,
              }}>
              <Text
                style={{
                  fontSize: 20,
                  fontFamily: "Poppins-SemiBold",
                  marginTop: 30,
                  lineHeight: 28,
                }}>
                Add Your Package Title, Price & Feature
              </Text>
            </View>
            <SvgXml
              xml={computer}
              style={{
                flex: 2,
              }}
              height={width / 2 + 35}
              width={width / 2 + 35}
            />
          </View>
          <View style={{ marginHorizontal: 20 }}>
            <Input
              value={Name}
              onChange={(e) => setName(e)}
              error={NameError}
              style={{
                borderWidth: 1,
                marginHorizontal: 0,
              }}
              placeholder={"Package Name"}
            />
          </View>
          <View style={{ marginHorizontal: 20 }}>
            <Input
              value={Price}
              onChange={(e) => setPrice(e)}
              error={PriceError}
              keyboardType={"numeric"}
              style={{
                borderWidth: 1,
                marginTop: 10,
                marginHorizontal: 0,
              }}
              placeholder={"Price"}
            />
          </View>

          <View
            style={{
              flexDirection: "row",
              paddingHorizontal: 20,
              marginTop: 15,
              marginBottom: 15,
            }}>
            <Text
              style={{
                fontSize: 18,
                fontFamily: "Poppins-SemiBold",
              }}>
              Add Feature
            </Text>
            <View
              style={{
                flex: 1,
                marginLeft: 50,
                justifyContent: "center",
              }}>
              <Text
                style={{
                  fontSize: 12,
                }}>
                *minimum one and maximum ten feature can add
              </Text>
            </View>
          </View>
          {TotalFeature.length >= 1 && (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature1Error}
                  onChange={(e) => {
                    setFeature1Error("");
                    if (e.length > 50) {
                      setFeature1Error("Maximum character 50");
                      return;
                    }
                    setFeature1(e);
                  }}
                  value={Feature1}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check1}
                  onChange={() => {
                    setCheck1(!Check1);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(1);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          )}
          {TotalFeature.length >= 2 && (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature2Error}
                  onChange={(e) => {
                    setFeature2Error("");
                    if (e.length > 50) {
                      setFeature2Error("Maximum character 50");
                      return;
                    }
                    setFeature2(e);
                  }}
                  value={Feature2}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check2}
                  onChange={() => {
                    setCheck2(!Check2);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(2);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          )}
          {TotalFeature.length >= 3 ? (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature3Error}
                  onChange={(e) => {
                    setFeature3Error("");
                    if (e.length > 50) {
                      setFeature3Error("Maximum character 50");
                      return;
                    }
                    setFeature3(e);
                  }}
                  value={Feature3}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check3}
                  onChange={() => {
                    setCheck3(!Check3);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(3);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          ) : null}
          {TotalFeature.length >= 4 ? (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature4Error}
                  onChange={(e) => {
                    setFeature4Error("");
                    if (e.length > 50) {
                      setFeature4Error("Maximum character 50");
                      return;
                    }
                    setFeature4(e);
                  }}
                  value={Feature4}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check4}
                  onChange={() => {
                    setCheck4(!Check4);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(4);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          ) : null}
          {TotalFeature.length >= 5 ? (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature5Error}
                  onChange={(e) => {
                    setFeature5Error("");
                    if (e.length > 50) {
                      setFeature5Error("Maximum character 50");
                      return;
                    }
                    setFeature5(e);
                  }}
                  value={Feature5}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check5}
                  onChange={() => {
                    setCheck5(!Check5);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(5);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          ) : null}
          {TotalFeature.length >= 6 ? (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature6Error}
                  onChange={(e) => {
                    setFeature6Error("");
                    if (e.length > 50) {
                      setFeature6Error("Maximum character 50");
                      return;
                    }
                    setFeature6(e);
                  }}
                  value={Feature6}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check6}
                  onChange={() => {
                    setCheck6(!Check6);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(6);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          ) : null}
          {TotalFeature.length >= 7 ? (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature7Error}
                  onChange={(e) => {
                    setFeature7Error("");
                    if (e.length > 50) {
                      setFeature7Error("Maximum character 50");
                      return;
                    }
                    setFeature7(e);
                  }}
                  value={Feature7}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check7}
                  onChange={() => {
                    setCheck7(!Check7);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(7);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          ) : null}
          {TotalFeature.length >= 8 ? (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature8Error}
                  onChange={(e) => {
                    setFeature8Error("");
                    if (e.length > 50) {
                      setFeature8Error("Maximum character 50");
                      return;
                    }
                    setFeature8(e);
                  }}
                  value={Feature8}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check8}
                  onChange={() => {
                    setCheck8(!Check8);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(8);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          ) : null}
          {TotalFeature.length >= 9 ? (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature9Error}
                  onChange={(e) => {
                    setFeature9Error("");
                    if (e.length > 50) {
                      setFeature9Error("Maximum character 50");
                      return;
                    }
                    setFeature9(e);
                  }}
                  value={Feature9}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check9}
                  onChange={() => {
                    setCheck9(!Check9);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(9);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          ) : null}
          {TotalFeature.length >= 10 ? (
            <View>
              <View
                style={{
                  marginHorizontal: 20,
                  marginVertical: 5,
                }}>
                <Input
                  level={"Max 50  character"}
                  error={Feature10Error}
                  onChange={(e) => {
                    setFeature10Error("");
                    if (e.length > 50) {
                      setFeature10Error("Maximum character 50");
                      return;
                    }
                    setFeature10(e);
                  }}
                  value={Feature10}
                  style={{
                    borderWidth: 1,
                    marginHorizontal: 0,
                  }}
                  placeholder={"Type here"}
                />
              </View>
              <View
                style={{
                  flexDirection: "row",
                }}>
                <CheckBox
                  value={Check10}
                  onChange={() => {
                    setCheck10(!Check10);
                  }}
                  style={{
                    marginHorizontal: 20,
                    marginVertical: 10,
                    width: 120,
                  }}
                  title={"Available"}
                />
                <TouchableOpacity
                  onPress={() => {
                    removeById(10);
                  }}
                  style={{
                    flexDirection: "row",
                    alignItems: "center",
                  }}>
                  <AntDesign name="minuscircleo" size={20} color="red" />
                  <Text
                    style={{
                      marginLeft: 10,
                      fontSize: 16,
                    }}>
                    Remove
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          ) : null}
          {TotalFeature.length != 10 ? (
            <IconButton
              onPress={() => {
                setTotalFeature((val) => [...val, uuid.v4()]);
              }}
              LeftIcon={() => <Entypo name="plus" size={24} color="black" />}
              style={{
                justifyContent: "flex-start",
                borderWidth: 0,
                marginHorizontal: 10,
                width: 150,
              }}
              title={"Add More Feature"}
            />
          ) : null}
          {FeatureError && (
            <Text
              style={{
                color: "red",
                marginHorizontal: 20,
              }}>
              {FeatureError}
            </Text>
          )}
          <View
            style={{
              height: 30,
            }}
          />
          <IconButton
            onPress={() => {
              let arr = [];
              //let i=0;
              if (Feature1) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature1,
                  isAvailable: Check1,
                });
              }
              if (Feature2) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature2,
                  isAvailable: Check2,
                });
              }
              if (Feature3) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature3,
                  isAvailable: Check3,
                });
              }
              if (Feature4) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature4,
                  isAvailable: Check4,
                });
              }
              if (Feature5) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature5,
                  isAvailable: Check5,
                });
              }
              if (Feature6) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature6,
                  isAvailable: Check6,
                });
              }
              if (Feature7) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature7,
                  isAvailable: Check7,
                });
              }
              if (Feature8) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature8,
                  isAvailable: Check8,
                });
              }
              if (Feature9) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature9,
                  isAvailable: Check9,
                });
              }
              if (Feature10) {
                arr.push({
                  id: uuid.v4(),
                  title: Feature10,
                  isAvailable: Check10,
                });
              }

              setNameError(null);
              setPriceError(null);
              if (!Name) {
                setNameError("* Name is required");
                return;
              }
              if (!Price) {
                setPriceError("* Price is required");
                return;
              }
              if (arr.length != TotalFeature.length) {
                TotalFeature.map((doc, i) => {
                  if (i == 0 && !Feature1) {
                    setFeature1Error("Empty box");
                  } else if (i == 1 && !Feature2) {
                    setFeature2Error("Empty box");
                  } else if (i == 2 && !Feature3) {
                    setFeature3Error("Empty box");
                  } else if (i == 3 && !Feature4) {
                    setFeature4Error("Empty box");
                  } else if (i == 4 && !Feature5) {
                    setFeature5Error("Empty box");
                  } else if (i == 5 && !Feature6) {
                    setFeature6Error("Empty box");
                  } else if (i == 6 && !Feature7) {
                    setFeature7Error("Empty box");
                  } else if (i == 7 && !Feature8) {
                    setFeature8Error("Empty box");
                  } else if (i == 8 && !Feature9) {
                    setFeature9Error("Empty box");
                  } else if (i == 9 && !Feature10) {
                    setFeature10Error("Empty box");
                  }
                });
                return;
              }
              if (arr.length == 0) {
                setFeatureError("Require minimum 1 feature");
                return;
              }
              if (route.params.data) {
                let packages = route.params.package;
                let newArr = [];
                packages.map((doc, i) => {
                  if (doc.id == route.params.data.id) {
                    newArr.push({
                      name: Name,
                      id: route.params.data.id,
                      price: Price,
                      features: arr,
                    });
                  } else {
                    newArr.push(doc);
                  }
                });

                dispatch({ type: "SET_PACKAGES", playload: newArr });
                navigation.navigate("AddPackage", { length: newArr.length });
                return;
              }
              dispatch({
                type: "ADD_PACKAGE",
                playload: {
                  id: uuid.v4(),
                  name: Name,
                  price: Price,
                  features: arr,
                },
              });
              navigation.navigate("AddPackage");
            }}
            style={{
              backgroundColor: "#4ADE80",
              marginHorizontal: 20,
              height: 35,
              borderWidth: 0,
            }}
            title={"Confirm"}
          />
          <View
            style={{
              height: 30,
            }}
          />
        </ScrollView>
      </SafeAreaView>
    </KeyboardAvoidingView>
  );
};
